{"version":3,"file":"component---src-pages-404-js-995dc061fefb8a2b6378.js","mappings":"0JAkBA,UAZqBA,IAAyB,IAAxB,KAAEC,EAAI,SAAEC,GAAUF,EACtC,MAAMG,EAAYF,EAAKG,KAAKC,aAAaC,MAEzC,OACEC,EAAAA,cAACC,EAAAA,EAAM,CAACN,SAAUA,EAAUI,MAAOH,GACjCI,EAAAA,cAACE,EAAAA,EAAG,CAACH,MAAM,mBACXC,EAAAA,cAAA,UAAI,aACJA,EAAAA,cAAA,SAAG,4D,yDCDT,MAAMG,EAAMV,IAAyC,IAAxC,YAAEW,EAAW,KAAEC,EAAI,KAAEC,EAAI,MAAEP,GAAON,EAC7C,MAAM,KAAEI,IAASU,EAAAA,EAAAA,IAAe,cAa1BC,EAAkBJ,GAAeP,EAAKC,aAAaM,YAEzD,OACEJ,EAAAA,cAACS,EAAAA,EAAM,CACLC,eAAgB,CACdL,QAEFN,MAAOA,EACPY,cAAe,QAAQd,EAAKC,aAAaC,QACzCO,KAAM,CACJ,CACEM,KAAM,cACNC,QAASL,GAEX,CACEM,SAAU,WACVD,QAASd,GAEX,CACEe,SAAU,iBACVD,QAASL,GAEX,CACEM,SAAU,UACVD,QAAS,YAEXE,OAAOT,MAKfH,EAAIa,aAAe,CACjBX,KAAM,KACNC,KAAM,GACNF,YAAa,IAUf,K","sources":["webpack://sh-wiki/./src/pages/404.js","webpack://sh-wiki/./src/components/seo.js"],"sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst NotFoundPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"404: Not Found\" />\n      <h1>Not Found</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Layout>\n  )\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst SEO = ({ description, lang, meta, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `kr`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"names":["_ref","data","location","siteTitle","site","siteMetadata","title","React","Layout","Seo","SEO","description","lang","meta","useStaticQuery","metaDescription","Helmet","htmlAttributes","titleTemplate","name","content","property","concat","defaultProps"],"sourceRoot":""}