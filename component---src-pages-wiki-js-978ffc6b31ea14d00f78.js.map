{"version":3,"file":"component---src-pages-wiki-js-978ffc6b31ea14d00f78.js","mappings":"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","sources":["webpack://sh-wiki/./src/components/box.js","webpack://sh-wiki/./src/pages/wiki.js"],"sourcesContent":["import React, { useState } from \"react\"\nimport { Link, useStaticQuery, graphql } from \"gatsby\"\n\nconst Box = () => {\n  const [text, setText] = useState(\"\")\n  const [result, setResult] = useState([])\n\n  const data = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark {\n        nodes {\n          fields {\n            slug\n          }\n          rawMarkdownBody\n        }\n      }\n    }\n  `)\n\n  const ch2pattern = ch => {\n    const offset = 44032\n    if (/[가-힣]/.test(ch)) {\n      const chCode = ch.charCodeAt(0) - offset\n      if (chCode % 28 > 0) {\n        return ch\n      }\n      const begin = Math.floor(chCode / 28) * 28 + offset\n      const end = begin + 27\n      return `[\\\\u${begin.toString(16)}-\\\\u${end.toString(16)}]`\n    }\n\n    if (/[ㄱ-ㅎ]/.test(ch)) {\n      const con2syl = {\n        ㄱ: \"가\".charCodeAt(0),\n        ㄲ: \"까\".charCodeAt(0),\n        ㄴ: \"나\".charCodeAt(0),\n        ㄷ: \"다\".charCodeAt(0),\n        ㄸ: \"따\".charCodeAt(0),\n        ㄹ: \"라\".charCodeAt(0),\n        ㅁ: \"마\".charCodeAt(0),\n        ㅂ: \"바\".charCodeAt(0),\n        ㅃ: \"빠\".charCodeAt(0),\n        ㅅ: \"사\".charCodeAt(0),\n      }\n      const begin =\n        con2syl[ch] || (ch.charCodeAt(0) - 12613) * 588 + con2syl[\"ㅅ\"]\n      const end = begin + 587\n      return `[${ch}\\\\u${begin.toString(16)}-\\\\u${end.toString(16)}]`\n    }\n\n    return escapeRegExp(ch)\n  }\n\n  const createFuzzyMatcher = input => {\n    const pattern = input\n      .split(\"\")\n      .map(ch2pattern)\n      .map(pattern => \"(\" + pattern + \")\")\n      .join(\".*?\")\n    return new RegExp(pattern)\n  }\n\n  const escapeRegExp = ch => {\n    const reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g\n    const reHasRegExpChar = RegExp(reRegExpChar.source)\n    return ch && reHasRegExpChar.test(ch)\n      ? ch.replace(reRegExpChar, \"\\\\$&\")\n      : ch || \"\"\n  }\n\n  const onQuery = event => {\n    const textValue = event.target.value\n    setText(textValue)\n\n    const regex = createFuzzyMatcher(textValue)\n    const resultData = data.allMarkdownRemark.nodes\n      .filter(node => {\n        return regex.test(node.rawMarkdownBody)\n      })\n      .map(node => {\n        return node\n      })\n\n    setResult(resultData)\n  }\n\n  return (\n    <div>\n      <span>Fuzzy Finder :</span>\n      <input type=\"text\" name=\"search\" value={text} onChange={onQuery} />\n      {result.length > 0 ? (\n        result.map((key, i) => {\n          return (\n            <div\n              key={i}\n              style={{\n                background: `lightgrey`,\n                margin: `5px`,\n                width: `70%`,\n                color: `black`,\n              }}\n            >\n              <Link to={key.fields.slug}>{key.fields.slug}</Link>\n              {key.rawMarkdownBody.split(\" \")[0]}\n            </div>\n          )\n        })\n      ) : (\n        <div>\"empty\"</div>\n      )}\n    </div>\n  )\n}\n\nexport default Box\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport Box from \"../components/box\"\n\nconst WikiPage = ({\n  data: {\n    allMarkdownRemark: { group },\n    site: {\n      siteMetadata: { title },\n    },\n  },\n}) => (\n  <Layout title={title}>\n    <h1>Index</h1>\n    <div className=\"\">\n      <Box />\n      {group.map(tag => (\n        <div className=\"\">\n          {tag.fieldValue}\n          <ul>\n            {tag.nodes.map(node => (\n              <li>\n                <Link to={node.fields.slug} key={tag.fieldValue}>\n                  {node.frontmatter.title}(\n                  {node.timeToRead > 30 ? (\n                    <span style={{ color: `purple` }}>{node.timeToRead}</span>\n                  ) : (\n                    node.timeToRead\n                  )}\n                  min)\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n      ))}\n      <div className=\"square-center\">Evolve</div>\n    </div>\n  </Layout>\n)\n\nexport default WikiPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark {\n      group(field: { frontmatter: { tags: SELECT } }) {\n        fieldValue\n        nodes {\n          timeToRead\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["Box","text","setText","useState","result","setResult","data","useStaticQuery","ch2pattern","ch","test","chCode","charCodeAt","begin","Math","floor","end","toString","con2syl","ㄱ","ㄲ","ㄴ","ㄷ","ㄸ","ㄹ","ㅁ","ㅂ","ㅃ","ㅅ","escapeRegExp","reRegExpChar","reHasRegExpChar","RegExp","source","replace","React","type","name","value","onChange","event","textValue","target","regex","input","pattern","split","map","join","createFuzzyMatcher","resultData","allMarkdownRemark","nodes","filter","node","rawMarkdownBody","length","key","i","style","background","margin","width","color","Link","to","fields","slug","_ref","group","site","siteMetadata","title","Layout","className","tag","fieldValue","frontmatter","timeToRead"],"sourceRoot":""}