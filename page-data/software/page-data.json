{"componentChunkName":"component---src-templates-blog-post-js","path":"/software/","result":{"data":{"site":{"siteMetadata":{"title":"SH"}},"markdownRemark":{"id":"13b330a5-766b-5860-a8ca-68519097c36b","excerpt":"…","html":"<h2 id=\"소프트웨어\" style=\"position:relative;\"><a href=\"#%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4\" aria-label=\"소프트웨어 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>소프트웨어</h2>\n<ul>\n<li>사람 - 소프트웨어 - 사람</li>\n<li>제작자 - 소프트웨어 - 유저</li>\n<li>소프트웨어 - 유저</li>\n<li>물건 - 유저</li>\n</ul>\n<p>결국 사람이 기준이다. 소프트웨어는 개발자, 소프트웨어 자체, 유저에게 모두 영향을 받고 미친다</p>\n<h4 id=\"소프트웨어는-현대의-도구다\" style=\"position:relative;\"><a href=\"#%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EB%8A%94-%ED%98%84%EB%8C%80%EC%9D%98-%EB%8F%84%EA%B5%AC%EB%8B%A4\" aria-label=\"소프트웨어는 현대의 도구다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>소프트웨어는 현대의 도구다</h4>\n<p>소프트웨어는 망치 같은 도구가 될 수도 있고 하나의 작은 우주가 될 수도 있다.\n필요한 것을 공간, 시간의 제약 없이 쓸 수 있는 도구\n메타도구\n먹을 것이 필요하면 소프트웨어를 통해 먹을 것을 구하고\n공부를 하기 위해 소프트웨어를 통해 공부할 것을 구하고</p>\n<p>메타적이다는 것이 추상적이고 더 상위개념 같지만 실제 문제해결을 하는 것이\n아니라는 생각이 들기도 한다\n사용자에게 직관적인 사용이 되어야 한다</p>\n<h4 id=\"소프트웨어는-변경을-위해서-있다\" style=\"position:relative;\"><a href=\"#%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EB%8A%94-%EB%B3%80%EA%B2%BD%EC%9D%84-%EC%9C%84%ED%95%B4%EC%84%9C-%EC%9E%88%EB%8B%A4\" aria-label=\"소프트웨어는 변경을 위해서 있다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>소프트웨어는 변경을 위해서 있다</h4>\n<p>종이에 쓰면 수정이 힘든 것에 비해 소프트웨어의는 변경이 자유롭다</p>\n<p>선택 전에 기준을 세우는 것에 고민을 하고, 기준점에만 들어온다면 빠르게 선택한다\n기준은 목표점이 되고, 피드백을 만들어준다</p>\n<h4 id=\"계속-관리해주지-않아도-유지되는-소프트웨어가-만들어질-수-있을까\" style=\"position:relative;\"><a href=\"#%EA%B3%84%EC%86%8D-%EA%B4%80%EB%A6%AC%ED%95%B4%EC%A3%BC%EC%A7%80-%EC%95%8A%EC%95%84%EB%8F%84-%EC%9C%A0%EC%A7%80%EB%90%98%EB%8A%94-%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EA%B0%80-%EB%A7%8C%EB%93%A4%EC%96%B4%EC%A7%88-%EC%88%98-%EC%9E%88%EC%9D%84%EA%B9%8C\" aria-label=\"계속 관리해주지 않아도 유지되는 소프트웨어가 만들어질 수 있을까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>계속 관리해주지 않아도 유지되는 소프트웨어가 만들어질 수 있을까</h4>\n<h4 id=\"컨셉을-가진-소프트웨어\" style=\"position:relative;\"><a href=\"#%EC%BB%A8%EC%85%89%EC%9D%84-%EA%B0%80%EC%A7%84-%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4\" aria-label=\"컨셉을 가진 소프트웨어 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>컨셉을 가진 소프트웨어</h4>\n<p>풀속성 포켓몬만 모으는 사람처럼 컨셉을 가지면 재밌겠다\n근데 시야가 좁아지고, 특정한 영역에 고립되는 것은 조심해야겠다</p>\n<h4 id=\"algorithm-vs-program\" style=\"position:relative;\"><a href=\"#algorithm-vs-program\" aria-label=\"algorithm vs program permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Algorithm vs Program</h4>\n<ul>\n<li>Algorithm: Mathematically complete composition.</li>\n<li>Program: Combination of Algorithm.</li>\n</ul>\n<h4 id=\"소프트웨어-서비스에서-무료로-제공되어야-하는-부분과-돈을-받아야-하는-부분\" style=\"position:relative;\"><a href=\"#%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4-%EC%84%9C%EB%B9%84%EC%8A%A4%EC%97%90%EC%84%9C-%EB%AC%B4%EB%A3%8C%EB%A1%9C-%EC%A0%9C%EA%B3%B5%EB%90%98%EC%96%B4%EC%95%BC-%ED%95%98%EB%8A%94-%EB%B6%80%EB%B6%84%EA%B3%BC-%EB%8F%88%EC%9D%84-%EB%B0%9B%EC%95%84%EC%95%BC-%ED%95%98%EB%8A%94-%EB%B6%80%EB%B6%84\" aria-label=\"소프트웨어 서비스에서 무료로 제공되어야 하는 부분과 돈을 받아야 하는 부분 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>소프트웨어, 서비스에서 무료로 제공되어야 하는 부분과 돈을 받아야 하는 부분</h4>\n<p>기능의 90%는 무료로 제공하고 10%는 유료로 제공해야 한다는 의견이 있다.</p>\n<ul>\n<li>유튜브의 광고 정책과 컨텐츠 소비의 가치에 대해\n<ul>\n<li>유튜브가 동영상의 광고를 임의로 넣고 있다.\n컨텐츠 제공자는 광고를 안넣고 싶다고 해도 유튜브에서 강제로 넣는 것이다.</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"software-to-make-money\" style=\"position:relative;\"><a href=\"#software-to-make-money\" aria-label=\"software to make money permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>software to make money</h4>\n<p>소프트웨어나 컨텐츠에 돈을 안쓰려고 하는 경향이 있다\n내가 소프트웨어로 돈을 벌어야 하는데 돈을 안쓰면 내 소프트웨어도 가치를 인정받기 어렵다\n소프트웨어에 돈을 쓰기 싫어하는 이 생각을 어떻게 바꿔야 할까</p>\n<p>앞으로는 개인 맞춤형 서비스가 인기를 끌 것 같다. 그치만 개인은 돈을 안쓰려고 한다</p>\n<h4 id=\"맨투맨-서비스\" style=\"position:relative;\"><a href=\"#%EB%A7%A8%ED%88%AC%EB%A7%A8-%EC%84%9C%EB%B9%84%EC%8A%A4\" aria-label=\"맨투맨 서비스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>맨투맨 서비스</h4>\n<h5 id=\"개인-대상-맨투맨-프로젝트\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EC%9D%B8-%EB%8C%80%EC%83%81-%EB%A7%A8%ED%88%AC%EB%A7%A8-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8\" aria-label=\"개인 대상 맨투맨 프로젝트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개인 대상 맨투맨 프로젝트</h5>\n<ul>\n<li>기업 상대가 아니라 개인 프로젝트의 고객 지원을 기간 단위로 해주는 것 어떨까</li>\n<li>개인 프로젝트는 만들어놓고 덮히는 경우가 많은데 주기적으로 유저의 피드백을 잘 정리해서 보내준다면 개인 프로젝트 성장에도 도움이 될 것\n<ul>\n<li>팟캐스트에서 앱 만든 사람이 얘기한걸 듣고 떠올림</li>\n<li>처음에는 열성적으로 리뷰를 다 보곤 하지만 시간이 지나면 잠자는 앱들이 많다. 그 부분을 도와서 운영을 쉽게 할 수 있도록 피드백을 주면 좋겠다</li>\n</ul>\n</li>\n<li>잠자는 소프트웨어 주인에게 제안해도 좋을 듯</li>\n<li>고객지원 뿐 아니라 구매해서 운영해주는 것도 해볼 수 있을 듯</li>\n</ul>\n<h4 id=\"개인-맞춤형-서비스\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EC%9D%B8-%EB%A7%9E%EC%B6%A4%ED%98%95-%EC%84%9C%EB%B9%84%EC%8A%A4\" aria-label=\"개인 맞춤형 서비스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개인 맞춤형 서비스</h4>\n<p>인구 감소 - 내수 시장 축소 - 개인 맞춤형 서비스 - 데이터 많으면 유리\n데이터를 많이 갖고 있는 회사는?\n네이버, 카카오,\n사용자가 많은 회사\n삼성, 애플, 통신사\n정보를 모으고 있는 회사</p>\n<h4 id=\"변화를-감지하는-시간-200ms\" style=\"position:relative;\"><a href=\"#%EB%B3%80%ED%99%94%EB%A5%BC-%EA%B0%90%EC%A7%80%ED%95%98%EB%8A%94-%EC%8B%9C%EA%B0%84-200ms\" aria-label=\"변화를 감지하는 시간 200ms permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>변화를 감지하는 시간 200ms</h4>\n<p>지연됐다고 느끼는 시간은 이 시간 이후.\n애플은 의도적으로 버튼 동작 타이밍을 200ms에 맞췄다</p>\n<h2 id=\"agile\" style=\"position:relative;\"><a href=\"#agile\" aria-label=\"agile permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Agile</h2>\n<p>product build in one day. design to deploy</p>\n<h4 id=\"tldr\" style=\"position:relative;\"><a href=\"#tldr\" aria-label=\"tldr permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TL;DR</h4>\n<ul>\n<li><strong>Individuals and interactions</strong> over processes and tools</li>\n<li><strong>Working software</strong> over comprehensive documentation</li>\n<li><strong>Customer collaboration</strong> over contract negotiation</li>\n<li><strong>Responding to change</strong> over following a plan</li>\n</ul>\n<ul>\n<li><a href=\"https://www.agilealliance.org/agile101/the-agile-manifesto/\">https://www.agilealliance.org/agile101/the-agile-manifesto/</a></li>\n</ul>\n<h4 id=\"애자일의-완성도\" style=\"position:relative;\"><a href=\"#%EC%95%A0%EC%9E%90%EC%9D%BC%EC%9D%98-%EC%99%84%EC%84%B1%EB%8F%84\" aria-label=\"애자일의 완성도 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>애자일의 완성도</h4>\n<p>다 완성된 후에 보여주는 완성도보다 구현한 것을 계속 확인받으면서 수정해나가는\n완성도가 높다</p>\n<ul>\n<li>서비스를 기획하는 상황이라면 도메인 전문가가 고객의 역할을 할 수 있겠다.\n기획자가 도메인 전문가가 될 수도 있고</li>\n</ul>\n<p>고객은 잘 되고 있는지는 알고 싶어하지만, 계속 물어보는 것은 원하지 않는다</p>\n<h2 id=\"concurrency\" style=\"position:relative;\"><a href=\"#concurrency\" aria-label=\"concurrency permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Concurrency</h2>\n<ul>\n<li>Race conditions</li>\n<li>Deadlocks</li>\n<li>Testing Concurrency</li>\n</ul>\n<h4 id=\"동시성-병렬성-블록킹\" style=\"position:relative;\"><a href=\"#%EB%8F%99%EC%8B%9C%EC%84%B1-%EB%B3%91%EB%A0%AC%EC%84%B1-%EB%B8%94%EB%A1%9D%ED%82%B9\" aria-label=\"동시성 병렬성 블록킹 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>동시성 병렬성 블록킹</h4>\n<ul>\n<li>동시성 : 하나의 코어가 여러 작업을 조금씩 하는 것, = 비동기, 전체 동작시간은 같지만 효율성 증가됨</li>\n<li>병렬성 : 코어나 스레드를 여러개 두어 여러 작업을 한번에 하는 것, 시간은 줄어들지만 비용이 증가</li>\n<li>동기 : 하나의 코어가 하나의 작업만 하는 것\n멀티스레드라도 동기적으로 할 수 있다</li>\n<li>블록킹 : 제어권을 계속 가지고 있는 것</li>\n<li>논블록킹 : 비동기와 비슷한데 제어권을 하나의 작업이 가지고 있지 않게 하여 여러 작업이 제어권을 가질 수 있게 하는 것으로 비동기가 되면 논블록킹이 따라오는게 일반적이다</li>\n<li>비동기인데 블록킹이면 작업이 여러개 진행되어 다른 작업이 먼저 완료되어도 제어권을 가지고 있는 작업이 늦게 끝나면 먼저 완료된 작업이 아무런 이득이 없다.</li>\n</ul>\n<p>이것들은 I/O에 대한 것으로 CPU나 memory에서 작업을 어떻게 할지에 대한 것이다.</p>\n<p>넌블록킹 알고리즘이라는게 있는데\n멀티쓰레딩에서 하나의 쓰레드가 오류가 나거나 멈췄을 때 다른 쓰레드에 영향을 주지 않게 하는 것을 말한다.</p>\n<p>golang에서 goroutine은 비동기로 기본 동작하고, for 문으로 goroutine을 여러개\n만들면 병렬적으로 동작한다</p>\n<p>비동기라는 말이 동기화가 안된, 실시간이 아니라는 말로도 쓰인다\n비동기 통신으로 상대방을 신경 쓰지 않고 전달해놓는 것. 문자메시지.\n동기는 전화</p>\n<h4 id=\"비동기-프로그램의-실행-처리-사례\" style=\"position:relative;\"><a href=\"#%EB%B9%84%EB%8F%99%EA%B8%B0-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EC%9D%98-%EC%8B%A4%ED%96%89-%EC%B2%98%EB%A6%AC-%EC%82%AC%EB%A1%80\" aria-label=\"비동기 프로그램의 실행 처리 사례 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>비동기 프로그램의 실행 처리 사례</h4>\n<p>사용자가 입력을 주는 부분 A\n반응 해야 하는 부분 B\nB는 A에다가 함수를 전달해놓고\nA가 특정한 상황이 되면 B를 실행시키도록 하면\nB는 루프를 돌면서 응답을 확인하지 않아도 A에 의해 실행 될 수 있다\n(SetTimeOut 이나 while 루프를 돌 필요가 없다)\n여기에 더해 중간에 메시지 큐를 이용하면\nA와 B가 서로 연결되어 있지 않아도 메시지 큐에서 데이터를 받아서\n응답을 할 수 있게 된다\nA - 메시지 큐 - B\n이렇게 되면 의존성도 떨어지고 속도가 빠른 메시지 큐로 인해 더 좋은 응답을 할 수 있게 된다</p>\n<h2 id=\"pointer-vs-reference\" style=\"position:relative;\"><a href=\"#pointer-vs-reference\" aria-label=\"pointer vs reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>pointer vs reference</h2>\n<ul>\n<li>pointer is address of value</li>\n<li>reference is refer to value, share the address. (shallow copied object)</li>\n<li>pointer can re-assign, ref cannot. just same type, value, address.</li>\n<li>pointer has its own memory address, ref shares the same address.</li>\n<li>in python, it is shallow copy vs deep copy</li>\n<li>in Golang,\n<ul>\n<li>pointer is a variable which stores the address of another variable</li>\n<li>reference is a variable which refers to another variable</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">a := 1\nb := 2\nap = &amp;a\na = 3\n// ap value = 3\nap2 := ap\n*ap = 5\n// ap2 value = 5\nap = &amp;b\n// ap value = 2\n// ap2 value = 5</code></pre></div>\n<ul>\n<li><a href=\"https://spf13.com/post/go-pointers-vs-references/\">https://spf13.com/post/go-pointers-vs-references/</a></li>\n</ul>\n<h2 id=\"design-pattern\" style=\"position:relative;\"><a href=\"#design-pattern\" aria-label=\"design pattern permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Design Pattern</h2>\n<p>Singleton</p>\n<ul>\n<li>여러곳에서 하나의 객체만을 사용해야할 때 사용</li>\n<li>ex) theme, globalconfig</li>\n</ul>\n<p>Strategy</p>\n<ul>\n<li>객체들을 모듈화해서 수정이나 추가 시 전체코드를 건드리기보다 각각의 모듈만 건드리게끔 유도. 모듈을 만든 후 모듈 셋팅용 함수를 만들어서 수정은 한 곳에서만 하도록 구현</li>\n</ul>\n<p>Command</p>\n<ul>\n<li>모듈화를 하는 것은 strategy와 같으나 strategy는 하나의 기능을 여러방식으로 구현하는 것이라면 이것은 기능 자체를 여러개 만드는 개념</li>\n</ul>\n<p>Adapter</p>\n<ul>\n<li>추상화를 시켜서 형태가 다른(인자를 다르게 받는) 객체를 기존 객체를 부르듯이 부를 수 있게 하는 것</li>\n<li>ex) 외부 라이브러리 사용 시</li>\n</ul>\n<p>두 클래스나 객체에서 맞지 않는 부분을 연결 시켜야 할 때 서로 호환되도록 할 때 사용한다\n랩핑해주는것과 비슷한 것 같다\n인터페이스 자체를 수정하지 않고 클래스를 추가하여 그 클래스를 사용하게 함으로써 기존의 코드를 그대로 사용할 수 있다\n대신 코드는 좀 더 지저분해질 것이다</p>\n<p>Proxy</p>\n<ul>\n<li>호출하는 시점을 proxy가 실행된 후에만 실행되게하여 무거운 작업 시 가벼운 것들을 먼저 보여주게 할 수 있다</li>\n<li>//코드는 의존성이 없지만 proxy라는 구조는 다른 객체를 포함하는 구조라서 그다지 매력적이지 않다. 다른 방법으로 무거운 작업을 딜레이할 방법은? Promis 콜백처럼</li>\n</ul>\n<h4 id=\"abstraction-and-automation\" style=\"position:relative;\"><a href=\"#abstraction-and-automation\" aria-label=\"abstraction and automation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>abstraction and automation</h4>\n<p>design -> implement -> test -> deploy -> update</p>\n<ul>\n<li>If I am a backend engineer\nAm I need test the kubernetes? or just local test and push? * how to divide development environment and production?\nyes. developer should have test everything. no limit.</li>\n</ul>\n<p>commit -> docker test -> confirm commit -> push -> lint and test\nconfirm PR -> deploy -> send report</p>\n<h2 id=\"procedure-declarative\" style=\"position:relative;\"><a href=\"#procedure-declarative\" aria-label=\"procedure declarative permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>procedure, declarative</h2>\n<p>if else를 쓰는 절차적인 방식을, 어떤 인자가 필요하니 이게 없으면 만들어라 라는\n선언적 방식으로 바꿔 관리를 쉽게 한다</p>\n<p>함수가 한가지 일만 하는지 확인하는 방법은 추상화 수준이 일관된지 확인한다</p>\n<h2 id=\"변수에-get-set을-설정한다고-객체가-되는게-아니라\" style=\"position:relative;\"><a href=\"#%EB%B3%80%EC%88%98%EC%97%90-get-set%EC%9D%84-%EC%84%A4%EC%A0%95%ED%95%9C%EB%8B%A4%EA%B3%A0-%EA%B0%9D%EC%B2%B4%EA%B0%80-%EB%90%98%EB%8A%94%EA%B2%8C-%EC%95%84%EB%8B%88%EB%9D%BC\" aria-label=\"변수에 get set을 설정한다고 객체가 되는게 아니라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>변수에 get, set을 설정한다고 객체가 되는게 아니라</h2>\n<p>추상화를 통해 구현은 감추고 추상화 된 인터페이스를 보게 해야 클래스를 사용한다고 할 수 있다</p>\n<h4 id=\"객체는-내부구조를-숨겨야-한다고-한다\" style=\"position:relative;\"><a href=\"#%EA%B0%9D%EC%B2%B4%EB%8A%94-%EB%82%B4%EB%B6%80%EA%B5%AC%EC%A1%B0%EB%A5%BC-%EC%88%A8%EA%B2%A8%EC%95%BC-%ED%95%9C%EB%8B%A4%EA%B3%A0-%ED%95%9C%EB%8B%A4\" aria-label=\"객체는 내부구조를 숨겨야 한다고 한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>객체는 내부구조를 숨겨야 한다고 한다</h4>\n<p>변수를 프라이빗으로 하고 함수로 제어하는 것이 변수를 직접 조종하는 것보다 나은 이유</p>\n<ul>\n<li>변수에 특정한 속성을 넣어줘야 할 때 get 함수만 수정하면 변수 값을 쉽게 변경 할 수 있다</li>\n<li>다른 객체가 직접 값에 접근을 못하게 해서 원하는 동작을 지킬 수 있다.</li>\n</ul>\n<h4 id=\"사용자가-직접-호출하는-api는-최대한-추상적으로-하고\" style=\"position:relative;\"><a href=\"#%EC%82%AC%EC%9A%A9%EC%9E%90%EA%B0%80-%EC%A7%81%EC%A0%91-%ED%98%B8%EC%B6%9C%ED%95%98%EB%8A%94-api%EB%8A%94-%EC%B5%9C%EB%8C%80%ED%95%9C-%EC%B6%94%EC%83%81%EC%A0%81%EC%9C%BC%EB%A1%9C-%ED%95%98%EA%B3%A0\" aria-label=\"사용자가 직접 호출하는 api는 최대한 추상적으로 하고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사용자가 직접 호출하는 api는 최대한 추상적으로 하고</h4>\n<p>api는 인터페이스를 호출하고 인터페이스는 유닛함수를 호출하고\n유닛함수는 외부라이브러리와 분리시킨다?</p>\n<h4 id=\"plus\" style=\"position:relative;\"><a href=\"#plus\" aria-label=\"plus permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Plus</h4>\n<ul>\n<li>가벼워야 한다. 그래서 외부 API나 라이브러리를 안쓰고 싶었다\n<ul>\n<li>no dependency, low coupling</li>\n</ul>\n</li>\n<li>안전한 동작 - 회사일을 하면서</li>\n<li>하나하나의 시스템이 완성도 높은 시스템으로 구성할 수 있도록</li>\n<li>엘리베이터의 안정성이 보장되는 것처럼 (보장된다는 것이 100%는 아니다) 프로그램도 안정성이 보장되어야 한다.\n<ul>\n<li>엘리베이터는 하나의 제품 자체로만 구동한다. (자연 환경의 변수는 있다)\n그런데 프로그램은 OS, Kernal, 사용자의 기존 작업 환경 등이 영향을 끼친다.</li>\n<li>그저 동작하는 프로그램만으로는 부족하다 테스트코드를 만듬으로서 안정성을 높일 수 있다. 또 다른 방법은 무엇이 있을까</li>\n</ul>\n</li>\n<li>Transparent</li>\n<li>확장 시 확장하는 그 자체만 코드가 작성되어야 하고 기존의 코드를 건드리면 좀 별로다</li>\n<li>외부 모듈 사용 시에는 코드를 분리한다. 호출하는 함수와 실제 동작하는 함수로</li>\n<li>함수 인자는 최대한 적게 받는다</li>\n<li>함수 인자로 받지 않은 데이터는 수정하지 않는다 (순수 함수)</li>\n<li>객체를 먼저 정의하고, 그에 맞춰 코딩한다</li>\n<li>객체 변경이 필요할 때 큰 객체는 포인터로 넘기고 작은 값은 인자로 넘기는게 좋겠다</li>\n<li>변수,함수 앞에 접두어를 붙이는 것이 나쁜가? 직관적이고 그렇게 더럽히지 않는 것 같다\n<ul>\n<li>int 형은 i를 붙이고 인터페이스는 I를 붙이고</li>\n<li>변수에 접두어 붙이니 지저분해보임</li>\n</ul>\n</li>\n<li>내부변수로 만들어서 내부에서 변경시키는 것\n인자로 전달해서 변경 시키는 것\n내부변수로 하고 겟, 셋으로 감싸는 것\n어느것이 제일 좋을까</li>\n<li>추상화가 낮은 함수를 만들면 그 함수를 쓰는 곳과 구분이 되었으면 좋겠다\n같은 클래스 안에 있어야 한다면 어떻게 구분할 수 있을까</li>\n<li>개인 프로젝트는 라이브러리를 쓰기 보다 구현을 하고 싶다</li>\n<li>소프트웨어 사용을 하다보면 데이터는 계속 쌓일텐데 그 때마다 디스크를 늘리는건 아쉽다</li>\n<li>원하는 개발을 위해 기준을 세워놓아 흔들림 없이 목표를 이루어 나가야한다</li>\n<li>내 개발을 위한 철학을 만들어 두고, 내 것 뿐만 아니라 회사일을 할 때도 쓰는\n개발 최저 기준도 만들어놓는다</li>\n<li>Clean code / low coupling / module / single responsible</li>\n<li>safety / light weight / divide / api, test, log, error handling</li>\n<li>high performance, optimization, multi-function</li>\n<li>라이브러리 재사용성이 좋도록 한다\n라이브러리 사용 시 내부를 몰라도 되도록 해야한다</li>\n<li>grpc로 또는 http로 다른 자원에 접근하고</li>\n<li>내부 코드는 바로바로 갖다 쓸 수 있으면 좋겠다(golang처럼)</li>\n<li>소프트웨어를 만들고나면 실패지점을 일부로 계속 찾아서 안정성을 높여야겠다</li>\n<li>모든 코드는 레거시가 된다. 레거시는 걷어내야 하는게 아니라 쌓이는 유산이다\n그래서 코드를 재사용하기 좋게 만들어야 한다</li>\n</ul>\n<h2 id=\"직렬화\" style=\"position:relative;\"><a href=\"#%EC%A7%81%EB%A0%AC%ED%99%94\" aria-label=\"직렬화 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>직렬화</h2>\n<p>압축\nhttp header content type</p>\n<p>base64\n바이너리 데이터를 아스키 데이터로 변환하는 것\n이미지 파일 같은 데이터를 json으로 옮긴 후 바로 실행하려면 utf8 호환 등 안맞는\n경우가 있는데\nbase64로 인코딩해놓으면 범용성 있게 사용 가능하다</p>\n<h4 id=\"json\" style=\"position:relative;\"><a href=\"#json\" aria-label=\"json permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>json</h4>\n<ul>\n<li>marshal: 논리적 구조를 바이트로</li>\n<li>unmarshal: 바이트를 논리적 구조로</li>\n<li>encode: 언어 내부 구조를 json 형태의 스트림으로</li>\n<li>decode: json을 언어 내부 구조로</li>\n</ul>\n<p>표준 입출력은 encode/decode를 이용하면 마샬보다 빠르다\n(http response, file, stdout)</p>\n<h2 id=\"람다-아키텍처\" style=\"position:relative;\"><a href=\"#%EB%9E%8C%EB%8B%A4-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98\" aria-label=\"람다 아키텍처 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>람다 아키텍처</h2>\n<p>1억건의 데이터가 매일 쌓인다면 이것을 조회할 때 오래 걸린다</p>\n<p>이를 해결하기 위해 매일 하루를 요약한 테이블을 만들면 1년의 데이터가 365줄로 요약된다\n근데 실시간 데이터는 반영이 안되므로 이를 위해 실시간 데이터를 계속 업데이트 해준다</p>\n<p>기존 테이블에 실시간 테이블이 붙는 방식</p>\n<p>하둡이 배치처리를 하는 방식이라 빅데이터에 쓰인다</p>\n<h2 id=\"jpa\" style=\"position:relative;\"><a href=\"#jpa\" aria-label=\"jpa permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JPA</h2>\n<p>ORM이 코드의 객체성과 DB의 관계성을 매꾸기 위해 나왔다고 한다.\n그래서 DB를 item.getName() 이런 식으로 호출할 수 있게 되었다.\n마이크로서비스에서 다른 서비스의 데이터를 item.getName() 처럼 가져오려고 했던게\nORM에서 이미 나온 생각이었다.</p>\n<p>API gateway가 이를 구현해서 호출하도록 하면 모놀리스 그대로 마이크로서비스화 되지\n않을까?</p>\n<p>C#의 Linq는 SQL문처럼 작성하고 선언형으로 작성함으로서 함수형 아키텍처의 이점을\n가져가려고 한다.</p>\n<h2 id=\"동적-컨텐츠-vs-정적-컨텐츠\" style=\"position:relative;\"><a href=\"#%EB%8F%99%EC%A0%81-%EC%BB%A8%ED%85%90%EC%B8%A0-vs-%EC%A0%95%EC%A0%81-%EC%BB%A8%ED%85%90%EC%B8%A0\" aria-label=\"동적 컨텐츠 vs 정적 컨텐츠 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>동적 컨텐츠 vs 정적 컨텐츠</h2>\n<p>동적</p>\n<ul>\n<li>채팅</li>\n<li>데이터 변경(주식)</li>\n</ul>\n<p>블로그 글도 정적이지만 변경 되긴 한다. 근데 새로 빌드하는 것보다 새로 띄우는게\n더 빨라서 주식 정보의 경우에는 동적으로 변경되는게 효율적이다.</p>\n<h4 id=\"go-micro를-보면-실행시키기-위해-몇줄이-필요한데\" style=\"position:relative;\"><a href=\"#go-micro%EB%A5%BC-%EB%B3%B4%EB%A9%B4-%EC%8B%A4%ED%96%89%EC%8B%9C%ED%82%A4%EA%B8%B0-%EC%9C%84%ED%95%B4-%EB%AA%87%EC%A4%84%EC%9D%B4-%ED%95%84%EC%9A%94%ED%95%9C%EB%8D%B0\" aria-label=\"go micro를 보면 실행시키기 위해 몇줄이 필요한데 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Go micro를 보면 실행시키기 위해 몇줄이 필요한데</h4>\n<p>그러지말고 start만 하면 기본 실행 되고\n셋팅은 coc로 설정하면 설정되고 그냥 쓸 수 있게 하는게 좋을 것 같다</p>\n<p>개인적으로 쓰는 프로그램은 기본적으로 많은 기능이 있는 것은 안쓰고 싶다. 가볍고 단순하지만 추가적으로 기능을 추가하는 쪽이 좋을 것 같다\n그래서 웨일도 별로다\n웨일은 크롬과 똑같은 엔진을 쓰지만 기본 기능이 주렁주렁 달려있다.\n한번씩 기본 기능들이 좀 많아서 기능의 혜택을 받았으면 좋겠다는 생각이 들었는데, 그냥 가벼운 쪽이 더 컨트롤하기 좋아서 낫겠다 싶다</p>\n<p>플러그인의 단점이 일일이 찾아봐야 기능을 쓸 수 있다는 것인데, 이 부분을 개선할 필요가 있다</p>\n<h4 id=\"micro\" style=\"position:relative;\"><a href=\"#micro\" aria-label=\"micro permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>micro</h4>\n<p>grpc는 내가 모르는 코드를 너무 많이 생성한다. micro도 마찬가지\n나는 오히려 cookiecutter처럼 내가 알지만 매번 만들기 귀찮은 것을 쉽게 만들어주는\n것을 원한다. create-react-app처럼.\nkubernetes는... 점차 속속들이 알아나가야지...</p>\n<p>내 만들어져있는 로직을 조금만 수정해서 마이크로서비스화 하는 것을 해봐야겠다\n입력과 출력을 받는 형태만 갖추면 바로 찾아서 연결해서 쓰도록</p>\n<h4 id=\"스프링-빈\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EB%B9%88\" aria-label=\"스프링 빈 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스프링 빈</h4>\n<p>주요 속성</p>\n<ul>\n<li>class (필수)</li>\n<li>id: bean의 고유 식별자. 이름에 의미 없음!?</li>\n<li>scope</li>\n<li>constructor-arg: 생성 시 생성자에 전달할 인수</li>\n<li>property: 생성 시 bean setter에 전달할 인수\n<ul>\n<li>ref</li>\n<li>value</li>\n</ul>\n</li>\n<li>init method</li>\n<li>destroy method</li>\n</ul>\n<p><a href=\"context:annotation-config/\">context:annotation-config/</a> 를 쓰면 빈 설정을 어노테이션을 검색해 반영한다</p>\n<h4 id=\"스프링-시큐리티\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EC%8B%9C%ED%81%90%EB%A6%AC%ED%8B%B0\" aria-label=\"스프링 시큐리티 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스프링 시큐리티</h4>\n<p>security:authentication-manager</p>\n<ul>\n<li>인자로 받은 Authentication 객체가 유효하다면 Principal을 담고있는 이것을\n리턴한다.\n<ul>\n<li>security:authentication-provider\nmanager가 직접 처리 안하고 provider에 위임한다.</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"메소드-체이닝\" style=\"position:relative;\"><a href=\"#%EB%A9%94%EC%86%8C%EB%93%9C-%EC%B2%B4%EC%9D%B4%EB%8B%9D\" aria-label=\"메소드 체이닝 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>메소드 체이닝</h4>\n<p>기차 충돌\n빌더 패턴\n디미터의 법칙\n함수형 패러다임</p>\n<p>객체 자신 또는 내부의 정보로 이루어진 체이닝은 괜찮다?</p>\n<p>객체 간 상태 변경 필요 시 어떻게 하는것이 효과적인가?\n주인공이 적을 공격 했을 때\n역할과 하는 일(책임)을 분리한다\n주인공은 공격하는 일만 하고, 적은 이벤트에 대응하기만 하면 된다?\n공격이 제대로 되었는지는 어디서 판단? 또 다른 객체?</p>\n<p>흐름이 없는 코드, 상태가 없는 코드</p>\n<h4 id=\"지금의-메소드-체이닝과-디미터-법칙의-차이\" style=\"position:relative;\"><a href=\"#%EC%A7%80%EA%B8%88%EC%9D%98-%EB%A9%94%EC%86%8C%EB%93%9C-%EC%B2%B4%EC%9D%B4%EB%8B%9D%EA%B3%BC-%EB%94%94%EB%AF%B8%ED%84%B0-%EB%B2%95%EC%B9%99%EC%9D%98-%EC%B0%A8%EC%9D%B4\" aria-label=\"지금의 메소드 체이닝과 디미터 법칙의 차이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>지금의 메소드 체이닝과 디미터 법칙의 차이</h4>\n<p>디미터 법칙은 호출한 객체의 함수가 다른 객체를 불러 처음 호출한 객체와 다른\n객체를 부르기 위한 것이 되어버린 메소드 체이닝이 복잡도를 높이는 점을 지적한다\n지금의 메소드 체이닝은 메소드가 기존에 호출했던 객체를 반환함으로써 가독성을\n높이는 효과를 위해 사용되고 있다</p>\n<h4 id=\"go-에서-외부공개함수는-대문자로-시작하는데\" style=\"position:relative;\"><a href=\"#go-%EC%97%90%EC%84%9C-%EC%99%B8%EB%B6%80%EA%B3%B5%EA%B0%9C%ED%95%A8%EC%88%98%EB%8A%94-%EB%8C%80%EB%AC%B8%EC%9E%90%EB%A1%9C-%EC%8B%9C%EC%9E%91%ED%95%98%EB%8A%94%EB%8D%B0\" aria-label=\"go 에서 외부공개함수는 대문자로 시작하는데 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>go 에서 외부공개함수는 대문자로 시작하는데</h4>\n<p>메인로직 외에는 공개하지 않도록 짜야겠다</p>\n<p>근데 인터페이스로 만들면 다 공개해야되는거 아닌가</p>\n<ul>\n<li>인터페이스로 쓰는건 공개하고, 인터페이스 함수 내에 있는 것은 감추면 되겠다</li>\n</ul>\n<h4 id=\"python-howdoi-라이브러리\" style=\"position:relative;\"><a href=\"#python-howdoi-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC\" aria-label=\"python howdoi 라이브러리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Python HowDoI 라이브러리</h4>\n<p>라이브러리 사용자가 쓰지 않는 함수는 함수명 앞에 언더바를 붙이고, 테스트 시\n사용자가 쓰는 함수만을 통해 테스트한다고 한다</p>\n<h4 id=\"플러그인-만드는-법\" style=\"position:relative;\"><a href=\"#%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8-%EB%A7%8C%EB%93%9C%EB%8A%94-%EB%B2%95\" aria-label=\"플러그인 만드는 법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>플러그인 만드는 법</h4>\n<p>비즈니스 로직이 바라보는 인터페이스가 있고,\n이 인터페이스를 구현하는게 플러그인이라면.</p>\n<p>플러그인의 예</p>\n<ul>\n<li>크롬 확장 프로그램\n<ul>\n<li>크롬의 정보를 불러와서 크롬에 표시하게 해준다.</li>\n</ul>\n</li>\n<li>그놈 확장 프로그램\n<ul>\n<li>그놈 인터페이스의 값을 내 기능을 실행시키고 동작하게 한다.</li>\n</ul>\n</li>\n<li>비주얼 스튜디오 코드의 확장 프로그램\n<ul>\n<li>원하는 기능을 실행하도록 해준다.</li>\n</ul>\n</li>\n</ul>\n<p>플러그인을 설치하면 기존의 흐름을 낚아채서 조절한 후 다시 갖다 놓는 그림이다.\n그렇다면 플러그인을 실행하도록 하는 로직을 구현해놔야겠다</p>\n<h4 id=\"플러그인\" style=\"position:relative;\"><a href=\"#%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8\" aria-label=\"플러그인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>플러그인</h4>\n<ul>\n<li>플러그인이 어디까지 접근 가능한가?\n<ul>\n<li>코드에 직접 접근하지 않지만 내부의 동작을 수정한다</li>\n<li>짜여진 코드 중간중간에 삽입하는게 아니라 외부에서 붙여지는 방식이라 관리가 쉽다</li>\n<li>사용/비사용 관리가 쉽다</li>\n<li>오버로딩과 비슷한 느낌으로 구현하는건가?</li>\n<li>플러그인을 실행하는 함수만 구현하도록 하고, 플러그인이 내부의 함수를 호출할 수 있도록 만들면 되나? 그러면 겹치는 부분은 플러그인 함수가 실행되게 되나?</li>\n<li>vscode 에서는 package.json에서 사용할 목록을 입력하고, extension.ts라는 하나의 파일 안에 activate라는 함수만 실행하게 해서 사용하려는 것을 사용하도록 하게 하고 있다\n<ul>\n<li>여기에 vscode에서 제공하는 함수들을 이용할 수 있게 했다. 플러그인 아키텍처를 구현할 때 이 함수들을 어떻게 만들지가 포인트겠다.\n<ul>\n<li>vscode의 commands 클래스에는 execute, register, update 등 함수가 제공된다.</li>\n<li>commands, window, workspace 등 조작할 수 있는 것들을 화이트리스트로 제공한다.</li>\n<li>즉 코어에서는 이 commands, window 들을 정의하는 것이 주요 역할이고 이를 익스텐션이 덮어쓰도록 한다.</li>\n<li>플러그인 구현하는쪽은 제공해준 함수 안에서만 뭔가를 할 수 있다.</li>\n</ul>\n</li>\n<li>사용자는 물론 자신의 함수를 정의해서 activate 함수에서 쓸 수 있다.</li>\n<li>플러그인은 결국 인터페이스를 구현하는것이라 틀은 만들어놔야한다.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"특정한-값을-보고-분기해줄-때-어떻게하면-좋을까\" style=\"position:relative;\"><a href=\"#%ED%8A%B9%EC%A0%95%ED%95%9C-%EA%B0%92%EC%9D%84-%EB%B3%B4%EA%B3%A0-%EB%B6%84%EA%B8%B0%ED%95%B4%EC%A4%84-%EB%95%8C-%EC%96%B4%EB%96%BB%EA%B2%8C%ED%95%98%EB%A9%B4-%EC%A2%8B%EC%9D%84%EA%B9%8C\" aria-label=\"특정한 값을 보고 분기해줄 때 어떻게하면 좋을까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>특정한 값을 보고 분기해줄 때 어떻게하면 좋을까</h4>\n<p>어떤 알림인지 타입을 보고 결정하게 될텐데\n타입에 맞는 핸들러를 매칭해줄때\n스위치를 쓸까\n배열에 지정해놓고 호출하는식으로 할까\n클래스로 할 수 있을까?</p>\n<p>타입을 보고 결정?</p>\n<h4 id=\"개발-노하우\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EB%B0%9C-%EB%85%B8%ED%95%98%EC%9A%B0\" aria-label=\"개발 노하우 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개발 노하우</h4>\n<p>삭제는 딜리트가 아니라 isDelete를 true로 바꾸고\n히스토리를 추가하는 작업</p>\n<p>진짜 삭제가 필요한 경우는?</p>\n<h4 id=\"프로그래밍-언어-추상화-단계\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%EC%96%B8%EC%96%B4-%EC%B6%94%EC%83%81%ED%99%94-%EB%8B%A8%EA%B3%84\" aria-label=\"프로그래밍 언어 추상화 단계 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로그래밍 언어 추상화 단계</h4>\n<ul>\n<li>기계어 0101010</li>\n<li>어셈블리어</li>\n<li>명령형 코드 for</li>\n<li>선언형 코드 filter()</li>\n</ul>\n<h4 id=\"iterator-함수-감싸기\" style=\"position:relative;\"><a href=\"#iterator-%ED%95%A8%EC%88%98-%EA%B0%90%EC%8B%B8%EA%B8%B0\" aria-label=\"iterator 함수 감싸기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>iterator 함수 감싸기</h4>\n<p>iterator를 쓰는 함수는 내부가 for문을 돌리고 원하는 처리를 하는 동일한 구조로 되어있다\n이걸 계속 반복해서 쓰기보다 감싼 함수에서 실행하게 하면 좋겠다</p>\n<h4 id=\"iterable-iterator-차이\" style=\"position:relative;\"><a href=\"#iterable-iterator-%EC%B0%A8%EC%9D%B4\" aria-label=\"iterable iterator 차이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>iterable, iterator 차이?</h4>\n<p>list 같이 요소를 순회할 수 있는 것을 iterable이라 한다\niterator도 iterable한 객체인데 iterator는 한 개씩 꺼내 쓰기 위한 것이라 iterable이 iterator는 아니다</p>\n<h4 id=\"iterator와-stream-비교\" style=\"position:relative;\"><a href=\"#iterator%EC%99%80-stream-%EB%B9%84%EA%B5%90\" aria-label=\"iterator와 stream 비교 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>iterator와 stream 비교</h4>\n<ul>\n<li>iterator를 간결하게 쓰게 해주는게 stream</li>\n</ul>\n<p>query로 필터링하는 것과 stream filter 비교</p>\n<ul>\n<li>많은 양에서는 무조건 쿼리가 빠름</li>\n<li>그동안 db 최적화가 아주 많이 이뤄졌기 때문\niterator도 iterable하니까 map을 쓸 수 있지 않을까?</li>\n</ul>\n<h2 id=\"software\" style=\"position:relative;\"><a href=\"#software\" aria-label=\"software permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>software</h2>\n<h4 id=\"twelve-factor-app\" style=\"position:relative;\"><a href=\"#twelve-factor-app\" aria-label=\"twelve factor app permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>twelve factor app</h4>\n<p>웹앱처럼 서비스로 사용되는 소프트웨어에서 이 요구사항 12가지를 챙겨서 만들자는 방법론</p>\n<ul>\n<li><a href=\"https://12factor.net/ko/\">https://12factor.net/ko/</a></li>\n</ul>\n<ol>\n<li>버전 컨트롤을 사용하자</li>\n<li>라이브러리 의존성을 명시적으로 선언하고 분리하자</li>\n<li>인증 정보, DB 설정, 각종 배포 설정을 환경 변수로 관리하자</li>\n<li>객체 저장소, DB, 캐시, 메시지 큐, 외부 API 서버 등을 구별 없이 서비스로 인식하자</li>\n<li>애플리케이션 빌드, 출시, 실행 단계를 엄격하게 분리하고 관리하자</li>\n<li>애플리케이션을 독립적인 무상태(stateless) 프로세스로 실행하자 (DB 사용. 로컬 Disk 사용 X)</li>\n<li>독립적인 포트를 바인딩하여 서비스로 공개하고 포트로 들어오는 요청을 처리하자</li>\n<li>이러한 프로세스 모델을 기반으로 수직적, 수평적 확장을 제공하자</li>\n<li>빠른 시작과 그레이스풀 셧다운을 통한 안정성 극대화를 하자</li>\n<li>개발, 테스트 및 정식 서비스 환경을 최대한 동일하게 유지하자</li>\n<li>각종 로그는 파일로 다루지 않고 앱이 실행되는 도중에 실시간으로 포착하자</li>\n<li>관리자 업무와 백 오피스 업무는 기존 애플리케이션 같은 환경에서 동일 형태로 취급하자</li>\n</ol>\n<p>그리고 추가로 3가지를 더 고려하면 좋겠다고 이야기했다고 한다\n텔레메트리(모니터링), 자동화, 보안</p>\n<h4 id=\"서버리스\" style=\"position:relative;\"><a href=\"#%EC%84%9C%EB%B2%84%EB%A6%AC%EC%8A%A4\" aria-label=\"서버리스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>서버리스</h4>\n<p>이벤트 소스 -> 함수 -> 서비스</p>\n<h4 id=\"객체-지향은-어떤-요구로-나오게-되었는가\" style=\"position:relative;\"><a href=\"#%EA%B0%9D%EC%B2%B4-%EC%A7%80%ED%96%A5%EC%9D%80-%EC%96%B4%EB%96%A4-%EC%9A%94%EA%B5%AC%EB%A1%9C-%EB%82%98%EC%98%A4%EA%B2%8C-%EB%90%98%EC%97%88%EB%8A%94%EA%B0%80\" aria-label=\"객체 지향은 어떤 요구로 나오게 되었는가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>객체 지향은 어떤 요구로 나오게 되었는가</h4>\n<p>복잡한 구조에서는 객체지향의 상속, 추상이 도움이 되더라</p>\n<p>절차지향적이던 코드는 책을 쓰는 것과 비슷했다\n객체지향이 나오면서 책을 쓰는 것과는 달라졌지만\n작가가 퇴고하는 것과 리팩토링하는 부분은 비슷했다\n하지만 작가는 퇴고 후 출판된 책은 더 이상 수정하려 하지 않고 독자에게로 넘겨준다\n이 점은 코딩과의 차이점인데, 코딩도 이처럼 완료되는 시점을 만들 수 있을까.\n리눅스의 sed나 기본 명령어들은 자주 업데이트하지 않으며, 오랫동안 업데이트 되지 않았지만 여전히 쓰이는 코드들이 있다.\n그러나 프로그램 전반의 생태계는 빠르게 변하고 있어서 사용자가 원활하게 쓸 수 있도록 하기 위해서는 끝없는 수정이 불가피하다.</p>\n<h4 id=\"모놀리스도-정반합에서-합이었던-아키텍처\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EB%86%80%EB%A6%AC%EC%8A%A4%EB%8F%84-%EC%A0%95%EB%B0%98%ED%95%A9%EC%97%90%EC%84%9C-%ED%95%A9%EC%9D%B4%EC%97%88%EB%8D%98-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98\" aria-label=\"모놀리스도 정반합에서 합이었던 아키텍처 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모놀리스도 정반합에서 합이었던 아키텍처</h4>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> 어떤 것을 보완하기 위해 모놀리스라는 아키텍처가 달성되었을까</li>\n</ul>\n<p>3 layer 아키텍처를 만들다보니 모놀리스가 된 것인가</p>\n<h2 id=\"컴퓨터\" style=\"position:relative;\"><a href=\"#%EC%BB%B4%ED%93%A8%ED%84%B0\" aria-label=\"컴퓨터 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>컴퓨터</h2>\n<h4 id=\"컴퓨터-1\" style=\"position:relative;\"><a href=\"#%EC%BB%B4%ED%93%A8%ED%84%B0-1\" aria-label=\"컴퓨터 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>컴퓨터</h4>\n<p>컴퓨터의 단점</p>\n<ul>\n<li>눈 앞에 있어야 한다. (컴퓨터 앞에서는 공간의 제약이 없어지지만)</li>\n<li>프로그램별 호환성, 종속성을 신경 써야한다. (에버노트의 데이터를 노션에\n옮기려면 번거롭다)</li>\n<li>디스플레이에 따라 정보가 제한적이고, 답답하고, 한 눈에 보기 힘들어진다.</li>\n</ul>\n<p>장점</p>\n<ul>\n<li>변경이 가능하다. (종이는 새로운 종이가 필요한데)</li>\n<li>점진적 개발이 가능하다</li>\n<li>검색 기능</li>\n</ul>\n<p>기계는 그냥 해달라는 대로 해주는 것에 그칠 뿐이지만\n사람은 그 요구사항을 경험적, 직관적으로 판단해서 소비자와 같이 만들 수 있다</p>\n<p>이 부분이 사람의 장점일 것 같다\n이 점은 서로 존중하면 시너지가 될 것이고, 이익만 좇는다면 등쳐먹는 것이 되겠다</p>\n<h4 id=\"digital\" style=\"position:relative;\"><a href=\"#digital\" aria-label=\"digital permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Digital</h4>\n<ul>\n<li>디지털의 역할</li>\n<li>불편함은 줄이고 원하는 것은 쉽게 얻을 수 있도록 하는 것?</li>\n</ul>","htmlAst":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{"id":"소프트웨어","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4","ariaLabel":"소프트웨어 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"소프트웨어"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"사람 - 소프트웨어 - 사람"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"제작자 - 소프트웨어 - 유저"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"소프트웨어 - 유저"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"물건 - 유저"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"결국 사람이 기준이다. 소프트웨어는 개발자, 소프트웨어 자체, 유저에게 모두 영향을 받고 미친다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"소프트웨어는-현대의-도구다","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EB%8A%94-%ED%98%84%EB%8C%80%EC%9D%98-%EB%8F%84%EA%B5%AC%EB%8B%A4","ariaLabel":"소프트웨어는 현대의 도구다 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"소프트웨어는 현대의 도구다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"소프트웨어는 망치 같은 도구가 될 수도 있고 하나의 작은 우주가 될 수도 있다.\n필요한 것을 공간, 시간의 제약 없이 쓸 수 있는 도구\n메타도구\n먹을 것이 필요하면 소프트웨어를 통해 먹을 것을 구하고\n공부를 하기 위해 소프트웨어를 통해 공부할 것을 구하고"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"메타적이다는 것이 추상적이고 더 상위개념 같지만 실제 문제해결을 하는 것이\n아니라는 생각이 들기도 한다\n사용자에게 직관적인 사용이 되어야 한다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"소프트웨어는-변경을-위해서-있다","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EB%8A%94-%EB%B3%80%EA%B2%BD%EC%9D%84-%EC%9C%84%ED%95%B4%EC%84%9C-%EC%9E%88%EB%8B%A4","ariaLabel":"소프트웨어는 변경을 위해서 있다 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"소프트웨어는 변경을 위해서 있다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"종이에 쓰면 수정이 힘든 것에 비해 소프트웨어의는 변경이 자유롭다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"선택 전에 기준을 세우는 것에 고민을 하고, 기준점에만 들어온다면 빠르게 선택한다\n기준은 목표점이 되고, 피드백을 만들어준다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"계속-관리해주지-않아도-유지되는-소프트웨어가-만들어질-수-있을까","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EA%B3%84%EC%86%8D-%EA%B4%80%EB%A6%AC%ED%95%B4%EC%A3%BC%EC%A7%80-%EC%95%8A%EC%95%84%EB%8F%84-%EC%9C%A0%EC%A7%80%EB%90%98%EB%8A%94-%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EA%B0%80-%EB%A7%8C%EB%93%A4%EC%96%B4%EC%A7%88-%EC%88%98-%EC%9E%88%EC%9D%84%EA%B9%8C","ariaLabel":"계속 관리해주지 않아도 유지되는 소프트웨어가 만들어질 수 있을까 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"계속 관리해주지 않아도 유지되는 소프트웨어가 만들어질 수 있을까"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"컨셉을-가진-소프트웨어","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EC%BB%A8%EC%85%89%EC%9D%84-%EA%B0%80%EC%A7%84-%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4","ariaLabel":"컨셉을 가진 소프트웨어 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"컨셉을 가진 소프트웨어"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"풀속성 포켓몬만 모으는 사람처럼 컨셉을 가지면 재밌겠다\n근데 시야가 좁아지고, 특정한 영역에 고립되는 것은 조심해야겠다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"algorithm-vs-program","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#algorithm-vs-program","ariaLabel":"algorithm vs program permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Algorithm vs Program"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Algorithm: Mathematically complete composition."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Program: Combination of Algorithm."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"소프트웨어-서비스에서-무료로-제공되어야-하는-부분과-돈을-받아야-하는-부분","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4-%EC%84%9C%EB%B9%84%EC%8A%A4%EC%97%90%EC%84%9C-%EB%AC%B4%EB%A3%8C%EB%A1%9C-%EC%A0%9C%EA%B3%B5%EB%90%98%EC%96%B4%EC%95%BC-%ED%95%98%EB%8A%94-%EB%B6%80%EB%B6%84%EA%B3%BC-%EB%8F%88%EC%9D%84-%EB%B0%9B%EC%95%84%EC%95%BC-%ED%95%98%EB%8A%94-%EB%B6%80%EB%B6%84","ariaLabel":"소프트웨어 서비스에서 무료로 제공되어야 하는 부분과 돈을 받아야 하는 부분 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"소프트웨어, 서비스에서 무료로 제공되어야 하는 부분과 돈을 받아야 하는 부분"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"기능의 90%는 무료로 제공하고 10%는 유료로 제공해야 한다는 의견이 있다."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"유튜브의 광고 정책과 컨텐츠 소비의 가치에 대해\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"유튜브가 동영상의 광고를 임의로 넣고 있다.\n컨텐츠 제공자는 광고를 안넣고 싶다고 해도 유튜브에서 강제로 넣는 것이다."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"software-to-make-money","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#software-to-make-money","ariaLabel":"software to make money permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"software to make money"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"소프트웨어나 컨텐츠에 돈을 안쓰려고 하는 경향이 있다\n내가 소프트웨어로 돈을 벌어야 하는데 돈을 안쓰면 내 소프트웨어도 가치를 인정받기 어렵다\n소프트웨어에 돈을 쓰기 싫어하는 이 생각을 어떻게 바꿔야 할까"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"앞으로는 개인 맞춤형 서비스가 인기를 끌 것 같다. 그치만 개인은 돈을 안쓰려고 한다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"맨투맨-서비스","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EB%A7%A8%ED%88%AC%EB%A7%A8-%EC%84%9C%EB%B9%84%EC%8A%A4","ariaLabel":"맨투맨 서비스 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"맨투맨 서비스"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{"id":"개인-대상-맨투맨-프로젝트","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EA%B0%9C%EC%9D%B8-%EB%8C%80%EC%83%81-%EB%A7%A8%ED%88%AC%EB%A7%A8-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8","ariaLabel":"개인 대상 맨투맨 프로젝트 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"개인 대상 맨투맨 프로젝트"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"기업 상대가 아니라 개인 프로젝트의 고객 지원을 기간 단위로 해주는 것 어떨까"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"개인 프로젝트는 만들어놓고 덮히는 경우가 많은데 주기적으로 유저의 피드백을 잘 정리해서 보내준다면 개인 프로젝트 성장에도 도움이 될 것\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"팟캐스트에서 앱 만든 사람이 얘기한걸 듣고 떠올림"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"처음에는 열성적으로 리뷰를 다 보곤 하지만 시간이 지나면 잠자는 앱들이 많다. 그 부분을 도와서 운영을 쉽게 할 수 있도록 피드백을 주면 좋겠다"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"잠자는 소프트웨어 주인에게 제안해도 좋을 듯"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"고객지원 뿐 아니라 구매해서 운영해주는 것도 해볼 수 있을 듯"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"개인-맞춤형-서비스","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EA%B0%9C%EC%9D%B8-%EB%A7%9E%EC%B6%A4%ED%98%95-%EC%84%9C%EB%B9%84%EC%8A%A4","ariaLabel":"개인 맞춤형 서비스 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"개인 맞춤형 서비스"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"인구 감소 - 내수 시장 축소 - 개인 맞춤형 서비스 - 데이터 많으면 유리\n데이터를 많이 갖고 있는 회사는?\n네이버, 카카오,\n사용자가 많은 회사\n삼성, 애플, 통신사\n정보를 모으고 있는 회사"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"변화를-감지하는-시간-200ms","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EB%B3%80%ED%99%94%EB%A5%BC-%EA%B0%90%EC%A7%80%ED%95%98%EB%8A%94-%EC%8B%9C%EA%B0%84-200ms","ariaLabel":"변화를 감지하는 시간 200ms permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"변화를 감지하는 시간 200ms"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"지연됐다고 느끼는 시간은 이 시간 이후.\n애플은 의도적으로 버튼 동작 타이밍을 200ms에 맞췄다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"agile","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#agile","ariaLabel":"agile permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Agile"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"product build in one day. design to deploy"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"tldr","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#tldr","ariaLabel":"tldr permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"TL;DR"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Individuals and interactions"}]},{"type":"text","value":" over processes and tools"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Working software"}]},{"type":"text","value":" over comprehensive documentation"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Customer collaboration"}]},{"type":"text","value":" over contract negotiation"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Responding to change"}]},{"type":"text","value":" over following a plan"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://www.agilealliance.org/agile101/the-agile-manifesto/"},"children":[{"type":"text","value":"https://www.agilealliance.org/agile101/the-agile-manifesto/"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"애자일의-완성도","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EC%95%A0%EC%9E%90%EC%9D%BC%EC%9D%98-%EC%99%84%EC%84%B1%EB%8F%84","ariaLabel":"애자일의 완성도 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"애자일의 완성도"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"다 완성된 후에 보여주는 완성도보다 구현한 것을 계속 확인받으면서 수정해나가는\n완성도가 높다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"서비스를 기획하는 상황이라면 도메인 전문가가 고객의 역할을 할 수 있겠다.\n기획자가 도메인 전문가가 될 수도 있고"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"고객은 잘 되고 있는지는 알고 싶어하지만, 계속 물어보는 것은 원하지 않는다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"concurrency","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#concurrency","ariaLabel":"concurrency permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Concurrency"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Race conditions"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Deadlocks"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Testing Concurrency"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"동시성-병렬성-블록킹","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EB%8F%99%EC%8B%9C%EC%84%B1-%EB%B3%91%EB%A0%AC%EC%84%B1-%EB%B8%94%EB%A1%9D%ED%82%B9","ariaLabel":"동시성 병렬성 블록킹 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"동시성 병렬성 블록킹"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"동시성 : 하나의 코어가 여러 작업을 조금씩 하는 것, = 비동기, 전체 동작시간은 같지만 효율성 증가됨"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"병렬성 : 코어나 스레드를 여러개 두어 여러 작업을 한번에 하는 것, 시간은 줄어들지만 비용이 증가"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"동기 : 하나의 코어가 하나의 작업만 하는 것\n멀티스레드라도 동기적으로 할 수 있다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"블록킹 : 제어권을 계속 가지고 있는 것"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"논블록킹 : 비동기와 비슷한데 제어권을 하나의 작업이 가지고 있지 않게 하여 여러 작업이 제어권을 가질 수 있게 하는 것으로 비동기가 되면 논블록킹이 따라오는게 일반적이다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"비동기인데 블록킹이면 작업이 여러개 진행되어 다른 작업이 먼저 완료되어도 제어권을 가지고 있는 작업이 늦게 끝나면 먼저 완료된 작업이 아무런 이득이 없다."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"이것들은 I/O에 대한 것으로 CPU나 memory에서 작업을 어떻게 할지에 대한 것이다."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"넌블록킹 알고리즘이라는게 있는데\n멀티쓰레딩에서 하나의 쓰레드가 오류가 나거나 멈췄을 때 다른 쓰레드에 영향을 주지 않게 하는 것을 말한다."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"golang에서 goroutine은 비동기로 기본 동작하고, for 문으로 goroutine을 여러개\n만들면 병렬적으로 동작한다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"비동기라는 말이 동기화가 안된, 실시간이 아니라는 말로도 쓰인다\n비동기 통신으로 상대방을 신경 쓰지 않고 전달해놓는 것. 문자메시지.\n동기는 전화"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"비동기-프로그램의-실행-처리-사례","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EB%B9%84%EB%8F%99%EA%B8%B0-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EC%9D%98-%EC%8B%A4%ED%96%89-%EC%B2%98%EB%A6%AC-%EC%82%AC%EB%A1%80","ariaLabel":"비동기 프로그램의 실행 처리 사례 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"비동기 프로그램의 실행 처리 사례"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"사용자가 입력을 주는 부분 A\n반응 해야 하는 부분 B\nB는 A에다가 함수를 전달해놓고\nA가 특정한 상황이 되면 B를 실행시키도록 하면\nB는 루프를 돌면서 응답을 확인하지 않아도 A에 의해 실행 될 수 있다\n(SetTimeOut 이나 while 루프를 돌 필요가 없다)\n여기에 더해 중간에 메시지 큐를 이용하면\nA와 B가 서로 연결되어 있지 않아도 메시지 큐에서 데이터를 받아서\n응답을 할 수 있게 된다\nA - 메시지 큐 - B\n이렇게 되면 의존성도 떨어지고 속도가 빠른 메시지 큐로 인해 더 좋은 응답을 할 수 있게 된다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"pointer-vs-reference","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#pointer-vs-reference","ariaLabel":"pointer vs reference permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"pointer vs reference"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"pointer is address of value"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"reference is refer to value, share the address. (shallow copied object)"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"pointer can re-assign, ref cannot. just same type, value, address."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"pointer has its own memory address, ref shares the same address."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"in python, it is shallow copy vs deep copy"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"in Golang,\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"pointer is a variable which stores the address of another variable"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"reference is a variable which refers to another variable"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"a := 1\nb := 2\nap = &a\na = 3\n// ap value = 3\nap2 := ap\n*ap = 5\n// ap2 value = 5\nap = &b\n// ap value = 2\n// ap2 value = 5"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://spf13.com/post/go-pointers-vs-references/"},"children":[{"type":"text","value":"https://spf13.com/post/go-pointers-vs-references/"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"design-pattern","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#design-pattern","ariaLabel":"design pattern permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Design Pattern"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Singleton"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"여러곳에서 하나의 객체만을 사용해야할 때 사용"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"ex) theme, globalconfig"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Strategy"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"객체들을 모듈화해서 수정이나 추가 시 전체코드를 건드리기보다 각각의 모듈만 건드리게끔 유도. 모듈을 만든 후 모듈 셋팅용 함수를 만들어서 수정은 한 곳에서만 하도록 구현"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Command"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"모듈화를 하는 것은 strategy와 같으나 strategy는 하나의 기능을 여러방식으로 구현하는 것이라면 이것은 기능 자체를 여러개 만드는 개념"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Adapter"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"추상화를 시켜서 형태가 다른(인자를 다르게 받는) 객체를 기존 객체를 부르듯이 부를 수 있게 하는 것"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"ex) 외부 라이브러리 사용 시"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"두 클래스나 객체에서 맞지 않는 부분을 연결 시켜야 할 때 서로 호환되도록 할 때 사용한다\n랩핑해주는것과 비슷한 것 같다\n인터페이스 자체를 수정하지 않고 클래스를 추가하여 그 클래스를 사용하게 함으로써 기존의 코드를 그대로 사용할 수 있다\n대신 코드는 좀 더 지저분해질 것이다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Proxy"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"호출하는 시점을 proxy가 실행된 후에만 실행되게하여 무거운 작업 시 가벼운 것들을 먼저 보여주게 할 수 있다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"//코드는 의존성이 없지만 proxy라는 구조는 다른 객체를 포함하는 구조라서 그다지 매력적이지 않다. 다른 방법으로 무거운 작업을 딜레이할 방법은? Promis 콜백처럼"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"abstraction-and-automation","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#abstraction-and-automation","ariaLabel":"abstraction and automation permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"abstraction and automation"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"design -> implement -> test -> deploy -> update"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"If I am a backend engineer\nAm I need test the kubernetes? or just local test and push? * how to divide development environment and production?\nyes. developer should have test everything. no limit."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"commit -> docker test -> confirm commit -> push -> lint and test\nconfirm PR -> deploy -> send report"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"procedure-declarative","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#procedure-declarative","ariaLabel":"procedure declarative permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"procedure, declarative"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"if else를 쓰는 절차적인 방식을, 어떤 인자가 필요하니 이게 없으면 만들어라 라는\n선언적 방식으로 바꿔 관리를 쉽게 한다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"함수가 한가지 일만 하는지 확인하는 방법은 추상화 수준이 일관된지 확인한다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"변수에-get-set을-설정한다고-객체가-되는게-아니라","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EB%B3%80%EC%88%98%EC%97%90-get-set%EC%9D%84-%EC%84%A4%EC%A0%95%ED%95%9C%EB%8B%A4%EA%B3%A0-%EA%B0%9D%EC%B2%B4%EA%B0%80-%EB%90%98%EB%8A%94%EA%B2%8C-%EC%95%84%EB%8B%88%EB%9D%BC","ariaLabel":"변수에 get set을 설정한다고 객체가 되는게 아니라 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"변수에 get, set을 설정한다고 객체가 되는게 아니라"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"추상화를 통해 구현은 감추고 추상화 된 인터페이스를 보게 해야 클래스를 사용한다고 할 수 있다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"객체는-내부구조를-숨겨야-한다고-한다","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EA%B0%9D%EC%B2%B4%EB%8A%94-%EB%82%B4%EB%B6%80%EA%B5%AC%EC%A1%B0%EB%A5%BC-%EC%88%A8%EA%B2%A8%EC%95%BC-%ED%95%9C%EB%8B%A4%EA%B3%A0-%ED%95%9C%EB%8B%A4","ariaLabel":"객체는 내부구조를 숨겨야 한다고 한다 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"객체는 내부구조를 숨겨야 한다고 한다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"변수를 프라이빗으로 하고 함수로 제어하는 것이 변수를 직접 조종하는 것보다 나은 이유"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"변수에 특정한 속성을 넣어줘야 할 때 get 함수만 수정하면 변수 값을 쉽게 변경 할 수 있다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"다른 객체가 직접 값에 접근을 못하게 해서 원하는 동작을 지킬 수 있다."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"사용자가-직접-호출하는-api는-최대한-추상적으로-하고","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EC%82%AC%EC%9A%A9%EC%9E%90%EA%B0%80-%EC%A7%81%EC%A0%91-%ED%98%B8%EC%B6%9C%ED%95%98%EB%8A%94-api%EB%8A%94-%EC%B5%9C%EB%8C%80%ED%95%9C-%EC%B6%94%EC%83%81%EC%A0%81%EC%9C%BC%EB%A1%9C-%ED%95%98%EA%B3%A0","ariaLabel":"사용자가 직접 호출하는 api는 최대한 추상적으로 하고 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"사용자가 직접 호출하는 api는 최대한 추상적으로 하고"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"api는 인터페이스를 호출하고 인터페이스는 유닛함수를 호출하고\n유닛함수는 외부라이브러리와 분리시킨다?"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"plus","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#plus","ariaLabel":"plus permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Plus"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"가벼워야 한다. 그래서 외부 API나 라이브러리를 안쓰고 싶었다\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"no dependency, low coupling"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"안전한 동작 - 회사일을 하면서"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"하나하나의 시스템이 완성도 높은 시스템으로 구성할 수 있도록"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"엘리베이터의 안정성이 보장되는 것처럼 (보장된다는 것이 100%는 아니다) 프로그램도 안정성이 보장되어야 한다.\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"엘리베이터는 하나의 제품 자체로만 구동한다. (자연 환경의 변수는 있다)\n그런데 프로그램은 OS, Kernal, 사용자의 기존 작업 환경 등이 영향을 끼친다."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"그저 동작하는 프로그램만으로는 부족하다 테스트코드를 만듬으로서 안정성을 높일 수 있다. 또 다른 방법은 무엇이 있을까"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Transparent"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"확장 시 확장하는 그 자체만 코드가 작성되어야 하고 기존의 코드를 건드리면 좀 별로다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"외부 모듈 사용 시에는 코드를 분리한다. 호출하는 함수와 실제 동작하는 함수로"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"함수 인자는 최대한 적게 받는다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"함수 인자로 받지 않은 데이터는 수정하지 않는다 (순수 함수)"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"객체를 먼저 정의하고, 그에 맞춰 코딩한다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"객체 변경이 필요할 때 큰 객체는 포인터로 넘기고 작은 값은 인자로 넘기는게 좋겠다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"변수,함수 앞에 접두어를 붙이는 것이 나쁜가? 직관적이고 그렇게 더럽히지 않는 것 같다\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"int 형은 i를 붙이고 인터페이스는 I를 붙이고"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"변수에 접두어 붙이니 지저분해보임"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"내부변수로 만들어서 내부에서 변경시키는 것\n인자로 전달해서 변경 시키는 것\n내부변수로 하고 겟, 셋으로 감싸는 것\n어느것이 제일 좋을까"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"추상화가 낮은 함수를 만들면 그 함수를 쓰는 곳과 구분이 되었으면 좋겠다\n같은 클래스 안에 있어야 한다면 어떻게 구분할 수 있을까"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"개인 프로젝트는 라이브러리를 쓰기 보다 구현을 하고 싶다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"소프트웨어 사용을 하다보면 데이터는 계속 쌓일텐데 그 때마다 디스크를 늘리는건 아쉽다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"원하는 개발을 위해 기준을 세워놓아 흔들림 없이 목표를 이루어 나가야한다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"내 개발을 위한 철학을 만들어 두고, 내 것 뿐만 아니라 회사일을 할 때도 쓰는\n개발 최저 기준도 만들어놓는다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Clean code / low coupling / module / single responsible"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"safety / light weight / divide / api, test, log, error handling"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"high performance, optimization, multi-function"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"라이브러리 재사용성이 좋도록 한다\n라이브러리 사용 시 내부를 몰라도 되도록 해야한다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"grpc로 또는 http로 다른 자원에 접근하고"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"내부 코드는 바로바로 갖다 쓸 수 있으면 좋겠다(golang처럼)"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"소프트웨어를 만들고나면 실패지점을 일부로 계속 찾아서 안정성을 높여야겠다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"모든 코드는 레거시가 된다. 레거시는 걷어내야 하는게 아니라 쌓이는 유산이다\n그래서 코드를 재사용하기 좋게 만들어야 한다"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"직렬화","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EC%A7%81%EB%A0%AC%ED%99%94","ariaLabel":"직렬화 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"직렬화"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"압축\nhttp header content type"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"base64\n바이너리 데이터를 아스키 데이터로 변환하는 것\n이미지 파일 같은 데이터를 json으로 옮긴 후 바로 실행하려면 utf8 호환 등 안맞는\n경우가 있는데\nbase64로 인코딩해놓으면 범용성 있게 사용 가능하다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"json","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#json","ariaLabel":"json permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"json"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"marshal: 논리적 구조를 바이트로"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"unmarshal: 바이트를 논리적 구조로"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"encode: 언어 내부 구조를 json 형태의 스트림으로"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"decode: json을 언어 내부 구조로"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"표준 입출력은 encode/decode를 이용하면 마샬보다 빠르다\n(http response, file, stdout)"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"람다-아키텍처","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EB%9E%8C%EB%8B%A4-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98","ariaLabel":"람다 아키텍처 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"람다 아키텍처"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"1억건의 데이터가 매일 쌓인다면 이것을 조회할 때 오래 걸린다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"이를 해결하기 위해 매일 하루를 요약한 테이블을 만들면 1년의 데이터가 365줄로 요약된다\n근데 실시간 데이터는 반영이 안되므로 이를 위해 실시간 데이터를 계속 업데이트 해준다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"기존 테이블에 실시간 테이블이 붙는 방식"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"하둡이 배치처리를 하는 방식이라 빅데이터에 쓰인다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"jpa","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#jpa","ariaLabel":"jpa permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"JPA"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"ORM이 코드의 객체성과 DB의 관계성을 매꾸기 위해 나왔다고 한다.\n그래서 DB를 item.getName() 이런 식으로 호출할 수 있게 되었다.\n마이크로서비스에서 다른 서비스의 데이터를 item.getName() 처럼 가져오려고 했던게\nORM에서 이미 나온 생각이었다."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"API gateway가 이를 구현해서 호출하도록 하면 모놀리스 그대로 마이크로서비스화 되지\n않을까?"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"C#의 Linq는 SQL문처럼 작성하고 선언형으로 작성함으로서 함수형 아키텍처의 이점을\n가져가려고 한다."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"동적-컨텐츠-vs-정적-컨텐츠","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EB%8F%99%EC%A0%81-%EC%BB%A8%ED%85%90%EC%B8%A0-vs-%EC%A0%95%EC%A0%81-%EC%BB%A8%ED%85%90%EC%B8%A0","ariaLabel":"동적 컨텐츠 vs 정적 컨텐츠 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"동적 컨텐츠 vs 정적 컨텐츠"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"동적"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"채팅"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"데이터 변경(주식)"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"블로그 글도 정적이지만 변경 되긴 한다. 근데 새로 빌드하는 것보다 새로 띄우는게\n더 빨라서 주식 정보의 경우에는 동적으로 변경되는게 효율적이다."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"go-micro를-보면-실행시키기-위해-몇줄이-필요한데","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#go-micro%EB%A5%BC-%EB%B3%B4%EB%A9%B4-%EC%8B%A4%ED%96%89%EC%8B%9C%ED%82%A4%EA%B8%B0-%EC%9C%84%ED%95%B4-%EB%AA%87%EC%A4%84%EC%9D%B4-%ED%95%84%EC%9A%94%ED%95%9C%EB%8D%B0","ariaLabel":"go micro를 보면 실행시키기 위해 몇줄이 필요한데 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Go micro를 보면 실행시키기 위해 몇줄이 필요한데"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"그러지말고 start만 하면 기본 실행 되고\n셋팅은 coc로 설정하면 설정되고 그냥 쓸 수 있게 하는게 좋을 것 같다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"개인적으로 쓰는 프로그램은 기본적으로 많은 기능이 있는 것은 안쓰고 싶다. 가볍고 단순하지만 추가적으로 기능을 추가하는 쪽이 좋을 것 같다\n그래서 웨일도 별로다\n웨일은 크롬과 똑같은 엔진을 쓰지만 기본 기능이 주렁주렁 달려있다.\n한번씩 기본 기능들이 좀 많아서 기능의 혜택을 받았으면 좋겠다는 생각이 들었는데, 그냥 가벼운 쪽이 더 컨트롤하기 좋아서 낫겠다 싶다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"플러그인의 단점이 일일이 찾아봐야 기능을 쓸 수 있다는 것인데, 이 부분을 개선할 필요가 있다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"micro","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#micro","ariaLabel":"micro permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"micro"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"grpc는 내가 모르는 코드를 너무 많이 생성한다. micro도 마찬가지\n나는 오히려 cookiecutter처럼 내가 알지만 매번 만들기 귀찮은 것을 쉽게 만들어주는\n것을 원한다. create-react-app처럼.\nkubernetes는... 점차 속속들이 알아나가야지..."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"내 만들어져있는 로직을 조금만 수정해서 마이크로서비스화 하는 것을 해봐야겠다\n입력과 출력을 받는 형태만 갖추면 바로 찾아서 연결해서 쓰도록"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"스프링-빈","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EC%8A%A4%ED%94%84%EB%A7%81-%EB%B9%88","ariaLabel":"스프링 빈 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"스프링 빈"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"주요 속성"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"class (필수)"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"id: bean의 고유 식별자. 이름에 의미 없음!?"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"scope"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"constructor-arg: 생성 시 생성자에 전달할 인수"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"property: 생성 시 bean setter에 전달할 인수\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"ref"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"value"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"init method"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"destroy method"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"context:annotation-config/"},"children":[{"type":"text","value":"context:annotation-config/"}]},{"type":"text","value":" 를 쓰면 빈 설정을 어노테이션을 검색해 반영한다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"스프링-시큐리티","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EC%8A%A4%ED%94%84%EB%A7%81-%EC%8B%9C%ED%81%90%EB%A6%AC%ED%8B%B0","ariaLabel":"스프링 시큐리티 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"스프링 시큐리티"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"security:authentication-manager"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"인자로 받은 Authentication 객체가 유효하다면 Principal을 담고있는 이것을\n리턴한다.\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"security:authentication-provider\nmanager가 직접 처리 안하고 provider에 위임한다."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"메소드-체이닝","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EB%A9%94%EC%86%8C%EB%93%9C-%EC%B2%B4%EC%9D%B4%EB%8B%9D","ariaLabel":"메소드 체이닝 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"메소드 체이닝"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"기차 충돌\n빌더 패턴\n디미터의 법칙\n함수형 패러다임"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"객체 자신 또는 내부의 정보로 이루어진 체이닝은 괜찮다?"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"객체 간 상태 변경 필요 시 어떻게 하는것이 효과적인가?\n주인공이 적을 공격 했을 때\n역할과 하는 일(책임)을 분리한다\n주인공은 공격하는 일만 하고, 적은 이벤트에 대응하기만 하면 된다?\n공격이 제대로 되었는지는 어디서 판단? 또 다른 객체?"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"흐름이 없는 코드, 상태가 없는 코드"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"지금의-메소드-체이닝과-디미터-법칙의-차이","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EC%A7%80%EA%B8%88%EC%9D%98-%EB%A9%94%EC%86%8C%EB%93%9C-%EC%B2%B4%EC%9D%B4%EB%8B%9D%EA%B3%BC-%EB%94%94%EB%AF%B8%ED%84%B0-%EB%B2%95%EC%B9%99%EC%9D%98-%EC%B0%A8%EC%9D%B4","ariaLabel":"지금의 메소드 체이닝과 디미터 법칙의 차이 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"지금의 메소드 체이닝과 디미터 법칙의 차이"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"디미터 법칙은 호출한 객체의 함수가 다른 객체를 불러 처음 호출한 객체와 다른\n객체를 부르기 위한 것이 되어버린 메소드 체이닝이 복잡도를 높이는 점을 지적한다\n지금의 메소드 체이닝은 메소드가 기존에 호출했던 객체를 반환함으로써 가독성을\n높이는 효과를 위해 사용되고 있다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"go-에서-외부공개함수는-대문자로-시작하는데","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#go-%EC%97%90%EC%84%9C-%EC%99%B8%EB%B6%80%EA%B3%B5%EA%B0%9C%ED%95%A8%EC%88%98%EB%8A%94-%EB%8C%80%EB%AC%B8%EC%9E%90%EB%A1%9C-%EC%8B%9C%EC%9E%91%ED%95%98%EB%8A%94%EB%8D%B0","ariaLabel":"go 에서 외부공개함수는 대문자로 시작하는데 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"go 에서 외부공개함수는 대문자로 시작하는데"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"메인로직 외에는 공개하지 않도록 짜야겠다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"근데 인터페이스로 만들면 다 공개해야되는거 아닌가"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"인터페이스로 쓰는건 공개하고, 인터페이스 함수 내에 있는 것은 감추면 되겠다"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"python-howdoi-라이브러리","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#python-howdoi-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC","ariaLabel":"python howdoi 라이브러리 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Python HowDoI 라이브러리"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"라이브러리 사용자가 쓰지 않는 함수는 함수명 앞에 언더바를 붙이고, 테스트 시\n사용자가 쓰는 함수만을 통해 테스트한다고 한다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"플러그인-만드는-법","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8-%EB%A7%8C%EB%93%9C%EB%8A%94-%EB%B2%95","ariaLabel":"플러그인 만드는 법 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"플러그인 만드는 법"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"비즈니스 로직이 바라보는 인터페이스가 있고,\n이 인터페이스를 구현하는게 플러그인이라면."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"플러그인의 예"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"크롬 확장 프로그램\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"크롬의 정보를 불러와서 크롬에 표시하게 해준다."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"그놈 확장 프로그램\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"그놈 인터페이스의 값을 내 기능을 실행시키고 동작하게 한다."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"비주얼 스튜디오 코드의 확장 프로그램\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"원하는 기능을 실행하도록 해준다."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"플러그인을 설치하면 기존의 흐름을 낚아채서 조절한 후 다시 갖다 놓는 그림이다.\n그렇다면 플러그인을 실행하도록 하는 로직을 구현해놔야겠다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"플러그인","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8","ariaLabel":"플러그인 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"플러그인"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"플러그인이 어디까지 접근 가능한가?\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"코드에 직접 접근하지 않지만 내부의 동작을 수정한다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"짜여진 코드 중간중간에 삽입하는게 아니라 외부에서 붙여지는 방식이라 관리가 쉽다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"사용/비사용 관리가 쉽다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"오버로딩과 비슷한 느낌으로 구현하는건가?"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"플러그인을 실행하는 함수만 구현하도록 하고, 플러그인이 내부의 함수를 호출할 수 있도록 만들면 되나? 그러면 겹치는 부분은 플러그인 함수가 실행되게 되나?"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"vscode 에서는 package.json에서 사용할 목록을 입력하고, extension.ts라는 하나의 파일 안에 activate라는 함수만 실행하게 해서 사용하려는 것을 사용하도록 하게 하고 있다\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"여기에 vscode에서 제공하는 함수들을 이용할 수 있게 했다. 플러그인 아키텍처를 구현할 때 이 함수들을 어떻게 만들지가 포인트겠다.\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"vscode의 commands 클래스에는 execute, register, update 등 함수가 제공된다."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"commands, window, workspace 등 조작할 수 있는 것들을 화이트리스트로 제공한다."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"즉 코어에서는 이 commands, window 들을 정의하는 것이 주요 역할이고 이를 익스텐션이 덮어쓰도록 한다."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"플러그인 구현하는쪽은 제공해준 함수 안에서만 뭔가를 할 수 있다."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"사용자는 물론 자신의 함수를 정의해서 activate 함수에서 쓸 수 있다."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"플러그인은 결국 인터페이스를 구현하는것이라 틀은 만들어놔야한다."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"특정한-값을-보고-분기해줄-때-어떻게하면-좋을까","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%ED%8A%B9%EC%A0%95%ED%95%9C-%EA%B0%92%EC%9D%84-%EB%B3%B4%EA%B3%A0-%EB%B6%84%EA%B8%B0%ED%95%B4%EC%A4%84-%EB%95%8C-%EC%96%B4%EB%96%BB%EA%B2%8C%ED%95%98%EB%A9%B4-%EC%A2%8B%EC%9D%84%EA%B9%8C","ariaLabel":"특정한 값을 보고 분기해줄 때 어떻게하면 좋을까 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"특정한 값을 보고 분기해줄 때 어떻게하면 좋을까"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"어떤 알림인지 타입을 보고 결정하게 될텐데\n타입에 맞는 핸들러를 매칭해줄때\n스위치를 쓸까\n배열에 지정해놓고 호출하는식으로 할까\n클래스로 할 수 있을까?"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"타입을 보고 결정?"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"개발-노하우","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EA%B0%9C%EB%B0%9C-%EB%85%B8%ED%95%98%EC%9A%B0","ariaLabel":"개발 노하우 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"개발 노하우"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"삭제는 딜리트가 아니라 isDelete를 true로 바꾸고\n히스토리를 추가하는 작업"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"진짜 삭제가 필요한 경우는?"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"프로그래밍-언어-추상화-단계","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%EC%96%B8%EC%96%B4-%EC%B6%94%EC%83%81%ED%99%94-%EB%8B%A8%EA%B3%84","ariaLabel":"프로그래밍 언어 추상화 단계 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"프로그래밍 언어 추상화 단계"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"기계어 0101010"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"어셈블리어"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"명령형 코드 for"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"선언형 코드 filter()"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"iterator-함수-감싸기","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#iterator-%ED%95%A8%EC%88%98-%EA%B0%90%EC%8B%B8%EA%B8%B0","ariaLabel":"iterator 함수 감싸기 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"iterator 함수 감싸기"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"iterator를 쓰는 함수는 내부가 for문을 돌리고 원하는 처리를 하는 동일한 구조로 되어있다\n이걸 계속 반복해서 쓰기보다 감싼 함수에서 실행하게 하면 좋겠다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"iterable-iterator-차이","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#iterable-iterator-%EC%B0%A8%EC%9D%B4","ariaLabel":"iterable iterator 차이 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"iterable, iterator 차이?"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"list 같이 요소를 순회할 수 있는 것을 iterable이라 한다\niterator도 iterable한 객체인데 iterator는 한 개씩 꺼내 쓰기 위한 것이라 iterable이 iterator는 아니다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"iterator와-stream-비교","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#iterator%EC%99%80-stream-%EB%B9%84%EA%B5%90","ariaLabel":"iterator와 stream 비교 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"iterator와 stream 비교"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"iterator를 간결하게 쓰게 해주는게 stream"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"query로 필터링하는 것과 stream filter 비교"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"많은 양에서는 무조건 쿼리가 빠름"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"그동안 db 최적화가 아주 많이 이뤄졌기 때문\niterator도 iterable하니까 map을 쓸 수 있지 않을까?"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"software","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#software","ariaLabel":"software permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"software"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"twelve-factor-app","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#twelve-factor-app","ariaLabel":"twelve factor app permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"twelve factor app"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"웹앱처럼 서비스로 사용되는 소프트웨어에서 이 요구사항 12가지를 챙겨서 만들자는 방법론"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://12factor.net/ko/"},"children":[{"type":"text","value":"https://12factor.net/ko/"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"버전 컨트롤을 사용하자"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"라이브러리 의존성을 명시적으로 선언하고 분리하자"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"인증 정보, DB 설정, 각종 배포 설정을 환경 변수로 관리하자"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"객체 저장소, DB, 캐시, 메시지 큐, 외부 API 서버 등을 구별 없이 서비스로 인식하자"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"애플리케이션 빌드, 출시, 실행 단계를 엄격하게 분리하고 관리하자"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"애플리케이션을 독립적인 무상태(stateless) 프로세스로 실행하자 (DB 사용. 로컬 Disk 사용 X)"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"독립적인 포트를 바인딩하여 서비스로 공개하고 포트로 들어오는 요청을 처리하자"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"이러한 프로세스 모델을 기반으로 수직적, 수평적 확장을 제공하자"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"빠른 시작과 그레이스풀 셧다운을 통한 안정성 극대화를 하자"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"개발, 테스트 및 정식 서비스 환경을 최대한 동일하게 유지하자"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"각종 로그는 파일로 다루지 않고 앱이 실행되는 도중에 실시간으로 포착하자"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"관리자 업무와 백 오피스 업무는 기존 애플리케이션 같은 환경에서 동일 형태로 취급하자"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"그리고 추가로 3가지를 더 고려하면 좋겠다고 이야기했다고 한다\n텔레메트리(모니터링), 자동화, 보안"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"서버리스","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EC%84%9C%EB%B2%84%EB%A6%AC%EC%8A%A4","ariaLabel":"서버리스 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"서버리스"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"이벤트 소스 -> 함수 -> 서비스"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"객체-지향은-어떤-요구로-나오게-되었는가","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EA%B0%9D%EC%B2%B4-%EC%A7%80%ED%96%A5%EC%9D%80-%EC%96%B4%EB%96%A4-%EC%9A%94%EA%B5%AC%EB%A1%9C-%EB%82%98%EC%98%A4%EA%B2%8C-%EB%90%98%EC%97%88%EB%8A%94%EA%B0%80","ariaLabel":"객체 지향은 어떤 요구로 나오게 되었는가 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"객체 지향은 어떤 요구로 나오게 되었는가"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"복잡한 구조에서는 객체지향의 상속, 추상이 도움이 되더라"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"절차지향적이던 코드는 책을 쓰는 것과 비슷했다\n객체지향이 나오면서 책을 쓰는 것과는 달라졌지만\n작가가 퇴고하는 것과 리팩토링하는 부분은 비슷했다\n하지만 작가는 퇴고 후 출판된 책은 더 이상 수정하려 하지 않고 독자에게로 넘겨준다\n이 점은 코딩과의 차이점인데, 코딩도 이처럼 완료되는 시점을 만들 수 있을까.\n리눅스의 sed나 기본 명령어들은 자주 업데이트하지 않으며, 오랫동안 업데이트 되지 않았지만 여전히 쓰이는 코드들이 있다.\n그러나 프로그램 전반의 생태계는 빠르게 변하고 있어서 사용자가 원활하게 쓸 수 있도록 하기 위해서는 끝없는 수정이 불가피하다."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"모놀리스도-정반합에서-합이었던-아키텍처","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EB%AA%A8%EB%86%80%EB%A6%AC%EC%8A%A4%EB%8F%84-%EC%A0%95%EB%B0%98%ED%95%A9%EC%97%90%EC%84%9C-%ED%95%A9%EC%9D%B4%EC%97%88%EB%8D%98-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98","ariaLabel":"모놀리스도 정반합에서 합이었던 아키텍처 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"모놀리스도 정반합에서 합이었던 아키텍처"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{"className":["contains-task-list"]},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{"className":["task-list-item"]},"children":[{"type":"element","tagName":"input","properties":{"type":"checkbox","disabled":true},"children":[]},{"type":"text","value":" 어떤 것을 보완하기 위해 모놀리스라는 아키텍처가 달성되었을까"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"3 layer 아키텍처를 만들다보니 모놀리스가 된 것인가"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"컴퓨터","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EC%BB%B4%ED%93%A8%ED%84%B0","ariaLabel":"컴퓨터 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"컴퓨터"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"컴퓨터-1","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EC%BB%B4%ED%93%A8%ED%84%B0-1","ariaLabel":"컴퓨터 1 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"컴퓨터"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"컴퓨터의 단점"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"눈 앞에 있어야 한다. (컴퓨터 앞에서는 공간의 제약이 없어지지만)"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"프로그램별 호환성, 종속성을 신경 써야한다. (에버노트의 데이터를 노션에\n옮기려면 번거롭다)"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"디스플레이에 따라 정보가 제한적이고, 답답하고, 한 눈에 보기 힘들어진다."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"장점"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"변경이 가능하다. (종이는 새로운 종이가 필요한데)"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"점진적 개발이 가능하다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"검색 기능"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"기계는 그냥 해달라는 대로 해주는 것에 그칠 뿐이지만\n사람은 그 요구사항을 경험적, 직관적으로 판단해서 소비자와 같이 만들 수 있다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"이 부분이 사람의 장점일 것 같다\n이 점은 서로 존중하면 시너지가 될 것이고, 이익만 좇는다면 등쳐먹는 것이 되겠다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"digital","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#digital","ariaLabel":"digital permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Digital"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"디지털의 역할"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"불편함은 줄이고 원하는 것은 쉽게 얻을 수 있도록 하는 것?"}]},{"type":"text","value":"\n"}]}],"data":{"quirksMode":false}},"rawMarkdownBody":"\n## 소프트웨어\n\n- 사람 - 소프트웨어 - 사람\n- 제작자 - 소프트웨어 - 유저\n- 소프트웨어 - 유저\n- 물건 - 유저\n\n결국 사람이 기준이다. 소프트웨어는 개발자, 소프트웨어 자체, 유저에게 모두 영향을 받고 미친다\n\n#### 소프트웨어는 현대의 도구다\n\n소프트웨어는 망치 같은 도구가 될 수도 있고 하나의 작은 우주가 될 수도 있다.\n필요한 것을 공간, 시간의 제약 없이 쓸 수 있는 도구\n메타도구\n먹을 것이 필요하면 소프트웨어를 통해 먹을 것을 구하고\n공부를 하기 위해 소프트웨어를 통해 공부할 것을 구하고\n\n메타적이다는 것이 추상적이고 더 상위개념 같지만 실제 문제해결을 하는 것이\n아니라는 생각이 들기도 한다\n사용자에게 직관적인 사용이 되어야 한다\n\n#### 소프트웨어는 변경을 위해서 있다\n\n종이에 쓰면 수정이 힘든 것에 비해 소프트웨어의는 변경이 자유롭다\n\n선택 전에 기준을 세우는 것에 고민을 하고, 기준점에만 들어온다면 빠르게 선택한다\n기준은 목표점이 되고, 피드백을 만들어준다\n\n#### 계속 관리해주지 않아도 유지되는 소프트웨어가 만들어질 수 있을까\n\n#### 컨셉을 가진 소프트웨어\n\n풀속성 포켓몬만 모으는 사람처럼 컨셉을 가지면 재밌겠다\n근데 시야가 좁아지고, 특정한 영역에 고립되는 것은 조심해야겠다\n\n#### Algorithm vs Program\n- Algorithm: Mathematically complete composition.\n- Program: Combination of Algorithm.\n\n#### 소프트웨어, 서비스에서 무료로 제공되어야 하는 부분과 돈을 받아야 하는 부분\n\n기능의 90%는 무료로 제공하고 10%는 유료로 제공해야 한다는 의견이 있다.\n\n- 유튜브의 광고 정책과 컨텐츠 소비의 가치에 대해\n  - 유튜브가 동영상의 광고를 임의로 넣고 있다.\n    컨텐츠 제공자는 광고를 안넣고 싶다고 해도 유튜브에서 강제로 넣는 것이다.\n\n#### software to make money\n\n소프트웨어나 컨텐츠에 돈을 안쓰려고 하는 경향이 있다\n내가 소프트웨어로 돈을 벌어야 하는데 돈을 안쓰면 내 소프트웨어도 가치를 인정받기 어렵다\n소프트웨어에 돈을 쓰기 싫어하는 이 생각을 어떻게 바꿔야 할까\n\n앞으로는 개인 맞춤형 서비스가 인기를 끌 것 같다. 그치만 개인은 돈을 안쓰려고 한다\n\n#### 맨투맨 서비스\n\n##### 개인 대상 맨투맨 프로젝트\n- 기업 상대가 아니라 개인 프로젝트의 고객 지원을 기간 단위로 해주는 것 어떨까 \n- 개인 프로젝트는 만들어놓고 덮히는 경우가 많은데 주기적으로 유저의 피드백을 잘 정리해서 보내준다면 개인 프로젝트 성장에도 도움이 될 것\n\t- 팟캐스트에서 앱 만든 사람이 얘기한걸 듣고 떠올림  \n  - 처음에는 열성적으로 리뷰를 다 보곤 하지만 시간이 지나면 잠자는 앱들이 많다. 그 부분을 도와서 운영을 쉽게 할 수 있도록 피드백을 주면 좋겠다  \n- 잠자는 소프트웨어 주인에게 제안해도 좋을 듯\n- 고객지원 뿐 아니라 구매해서 운영해주는 것도 해볼 수 있을 듯\n\n#### 개인 맞춤형 서비스\n\n인구 감소 - 내수 시장 축소 - 개인 맞춤형 서비스 - 데이터 많으면 유리\n데이터를 많이 갖고 있는 회사는?\n네이버, 카카오,\n사용자가 많은 회사\n삼성, 애플, 통신사\n정보를 모으고 있는 회사\n\n#### 변화를 감지하는 시간 200ms\n지연됐다고 느끼는 시간은 이 시간 이후.\n애플은 의도적으로 버튼 동작 타이밍을 200ms에 맞췄다\n\n## Agile\n\nproduct build in one day. design to deploy\n\n#### TL;DR\n\n- **Individuals and interactions** over processes and tools\n- **Working software** over comprehensive documentation\n- **Customer collaboration** over contract negotiation\n- **Responding to change** over following a plan\n\n* https://www.agilealliance.org/agile101/the-agile-manifesto/\n\n#### 애자일의 완성도\n\n다 완성된 후에 보여주는 완성도보다 구현한 것을 계속 확인받으면서 수정해나가는\n완성도가 높다\n\n- 서비스를 기획하는 상황이라면 도메인 전문가가 고객의 역할을 할 수 있겠다.\n  기획자가 도메인 전문가가 될 수도 있고\n\n고객은 잘 되고 있는지는 알고 싶어하지만, 계속 물어보는 것은 원하지 않는다\n\n\n## Concurrency\n\n- Race conditions\n- Deadlocks\n- Testing Concurrency\n\n#### 동시성 병렬성 블록킹\n\n- 동시성 : 하나의 코어가 여러 작업을 조금씩 하는 것, = 비동기, 전체 동작시간은 같지만 효율성 증가됨\n- 병렬성 : 코어나 스레드를 여러개 두어 여러 작업을 한번에 하는 것, 시간은 줄어들지만 비용이 증가\n- 동기 : 하나의 코어가 하나의 작업만 하는 것\n  멀티스레드라도 동기적으로 할 수 있다\n- 블록킹 : 제어권을 계속 가지고 있는 것\n- 논블록킹 : 비동기와 비슷한데 제어권을 하나의 작업이 가지고 있지 않게 하여 여러 작업이 제어권을 가질 수 있게 하는 것으로 비동기가 되면 논블록킹이 따라오는게 일반적이다\n- 비동기인데 블록킹이면 작업이 여러개 진행되어 다른 작업이 먼저 완료되어도 제어권을 가지고 있는 작업이 늦게 끝나면 먼저 완료된 작업이 아무런 이득이 없다.\n\n이것들은 I/O에 대한 것으로 CPU나 memory에서 작업을 어떻게 할지에 대한 것이다.\n\n넌블록킹 알고리즘이라는게 있는데\n멀티쓰레딩에서 하나의 쓰레드가 오류가 나거나 멈췄을 때 다른 쓰레드에 영향을 주지 않게 하는 것을 말한다.\n\ngolang에서 goroutine은 비동기로 기본 동작하고, for 문으로 goroutine을 여러개\n만들면 병렬적으로 동작한다\n\n비동기라는 말이 동기화가 안된, 실시간이 아니라는 말로도 쓰인다\n비동기 통신으로 상대방을 신경 쓰지 않고 전달해놓는 것. 문자메시지.\n동기는 전화\n\n#### 비동기 프로그램의 실행 처리 사례\n\n사용자가 입력을 주는 부분 A\n반응 해야 하는 부분 B\nB는 A에다가 함수를 전달해놓고\nA가 특정한 상황이 되면 B를 실행시키도록 하면\nB는 루프를 돌면서 응답을 확인하지 않아도 A에 의해 실행 될 수 있다\n(SetTimeOut 이나 while 루프를 돌 필요가 없다)\n여기에 더해 중간에 메시지 큐를 이용하면\nA와 B가 서로 연결되어 있지 않아도 메시지 큐에서 데이터를 받아서\n응답을 할 수 있게 된다\nA - 메시지 큐 - B\n이렇게 되면 의존성도 떨어지고 속도가 빠른 메시지 큐로 인해 더 좋은 응답을 할 수 있게 된다\n\n## pointer vs reference\n\n- pointer is address of value\n- reference is refer to value, share the address. (shallow copied object)\n- pointer can re-assign, ref cannot. just same type, value, address.\n- pointer has its own memory address, ref shares the same address.\n- in python, it is shallow copy vs deep copy\n- in Golang,\n  - pointer is a variable which stores the address of another variable\n  - reference is a variable which refers to another variable\n\n```\na := 1\nb := 2\nap = &a\na = 3\n// ap value = 3\nap2 := ap\n*ap = 5\n// ap2 value = 5\nap = &b\n// ap value = 2\n// ap2 value = 5\n```\n\n- https://spf13.com/post/go-pointers-vs-references/\n\n\n## Design Pattern\n\nSingleton\n\n- 여러곳에서 하나의 객체만을 사용해야할 때 사용\n- ex) theme, globalconfig\n\nStrategy\n\n- 객체들을 모듈화해서 수정이나 추가 시 전체코드를 건드리기보다 각각의 모듈만 건드리게끔 유도. 모듈을 만든 후 모듈 셋팅용 함수를 만들어서 수정은 한 곳에서만 하도록 구현\n\nCommand\n\n- 모듈화를 하는 것은 strategy와 같으나 strategy는 하나의 기능을 여러방식으로 구현하는 것이라면 이것은 기능 자체를 여러개 만드는 개념\n\nAdapter\n\n- 추상화를 시켜서 형태가 다른(인자를 다르게 받는) 객체를 기존 객체를 부르듯이 부를 수 있게 하는 것\n- ex) 외부 라이브러리 사용 시\n\n두 클래스나 객체에서 맞지 않는 부분을 연결 시켜야 할 때 서로 호환되도록 할 때 사용한다\n랩핑해주는것과 비슷한 것 같다\n인터페이스 자체를 수정하지 않고 클래스를 추가하여 그 클래스를 사용하게 함으로써 기존의 코드를 그대로 사용할 수 있다\n대신 코드는 좀 더 지저분해질 것이다\n\nProxy\n\n- 호출하는 시점을 proxy가 실행된 후에만 실행되게하여 무거운 작업 시 가벼운 것들을 먼저 보여주게 할 수 있다\n- //코드는 의존성이 없지만 proxy라는 구조는 다른 객체를 포함하는 구조라서 그다지 매력적이지 않다. 다른 방법으로 무거운 작업을 딜레이할 방법은? Promis 콜백처럼\n\n#### abstraction and automation\n\ndesign -> implement -> test -> deploy -> update\n\n- If I am a backend engineer\n  Am I need test the kubernetes? or just local test and push? \\* how to divide development environment and production?\n  yes. developer should have test everything. no limit.\n\ncommit -> docker test -> confirm commit -> push -> lint and test\nconfirm PR -> deploy -> send report\n\n## procedure, declarative\n\nif else를 쓰는 절차적인 방식을, 어떤 인자가 필요하니 이게 없으면 만들어라 라는\n선언적 방식으로 바꿔 관리를 쉽게 한다\n\n함수가 한가지 일만 하는지 확인하는 방법은 추상화 수준이 일관된지 확인한다\n\n## 변수에 get, set을 설정한다고 객체가 되는게 아니라\n\n추상화를 통해 구현은 감추고 추상화 된 인터페이스를 보게 해야 클래스를 사용한다고 할 수 있다\n\n#### 객체는 내부구조를 숨겨야 한다고 한다\n\n변수를 프라이빗으로 하고 함수로 제어하는 것이 변수를 직접 조종하는 것보다 나은 이유\n\n- 변수에 특정한 속성을 넣어줘야 할 때 get 함수만 수정하면 변수 값을 쉽게 변경 할 수 있다\n- 다른 객체가 직접 값에 접근을 못하게 해서 원하는 동작을 지킬 수 있다.\n\n#### 사용자가 직접 호출하는 api는 최대한 추상적으로 하고\n\napi는 인터페이스를 호출하고 인터페이스는 유닛함수를 호출하고\n유닛함수는 외부라이브러리와 분리시킨다?\n\n#### Plus\n\n- 가벼워야 한다. 그래서 외부 API나 라이브러리를 안쓰고 싶었다\n  - no dependency, low coupling\n- 안전한 동작 - 회사일을 하면서\n- 하나하나의 시스템이 완성도 높은 시스템으로 구성할 수 있도록\n- 엘리베이터의 안정성이 보장되는 것처럼 (보장된다는 것이 100%는 아니다) 프로그램도 안정성이 보장되어야 한다.\n  - 엘리베이터는 하나의 제품 자체로만 구동한다. (자연 환경의 변수는 있다)\n    그런데 프로그램은 OS, Kernal, 사용자의 기존 작업 환경 등이 영향을 끼친다.\n  - 그저 동작하는 프로그램만으로는 부족하다 테스트코드를 만듬으로서 안정성을 높일 수 있다. 또 다른 방법은 무엇이 있을까\n- Transparent\n- 확장 시 확장하는 그 자체만 코드가 작성되어야 하고 기존의 코드를 건드리면 좀 별로다\n- 외부 모듈 사용 시에는 코드를 분리한다. 호출하는 함수와 실제 동작하는 함수로\n- 함수 인자는 최대한 적게 받는다\n- 함수 인자로 받지 않은 데이터는 수정하지 않는다 (순수 함수)\n- 객체를 먼저 정의하고, 그에 맞춰 코딩한다\n- 객체 변경이 필요할 때 큰 객체는 포인터로 넘기고 작은 값은 인자로 넘기는게 좋겠다\n- 변수,함수 앞에 접두어를 붙이는 것이 나쁜가? 직관적이고 그렇게 더럽히지 않는 것 같다\n  - int 형은 i를 붙이고 인터페이스는 I를 붙이고\n  - 변수에 접두어 붙이니 지저분해보임\n- 내부변수로 만들어서 내부에서 변경시키는 것\n  인자로 전달해서 변경 시키는 것\n  내부변수로 하고 겟, 셋으로 감싸는 것\n  어느것이 제일 좋을까\n- 추상화가 낮은 함수를 만들면 그 함수를 쓰는 곳과 구분이 되었으면 좋겠다\n  같은 클래스 안에 있어야 한다면 어떻게 구분할 수 있을까\n- 개인 프로젝트는 라이브러리를 쓰기 보다 구현을 하고 싶다\n- 소프트웨어 사용을 하다보면 데이터는 계속 쌓일텐데 그 때마다 디스크를 늘리는건 아쉽다\n- 원하는 개발을 위해 기준을 세워놓아 흔들림 없이 목표를 이루어 나가야한다\n- 내 개발을 위한 철학을 만들어 두고, 내 것 뿐만 아니라 회사일을 할 때도 쓰는\n  개발 최저 기준도 만들어놓는다\n- Clean code / low coupling / module / single responsible\n- safety / light weight / divide / api, test, log, error handling\n- high performance, optimization, multi-function\n- 라이브러리 재사용성이 좋도록 한다\n  라이브러리 사용 시 내부를 몰라도 되도록 해야한다\n- grpc로 또는 http로 다른 자원에 접근하고\n- 내부 코드는 바로바로 갖다 쓸 수 있으면 좋겠다(golang처럼)\n- 소프트웨어를 만들고나면 실패지점을 일부로 계속 찾아서 안정성을 높여야겠다\n- 모든 코드는 레거시가 된다. 레거시는 걷어내야 하는게 아니라 쌓이는 유산이다\n  그래서 코드를 재사용하기 좋게 만들어야 한다\n\n## 직렬화\n\n압축\nhttp header content type\n\nbase64\n바이너리 데이터를 아스키 데이터로 변환하는 것\n이미지 파일 같은 데이터를 json으로 옮긴 후 바로 실행하려면 utf8 호환 등 안맞는\n경우가 있는데\nbase64로 인코딩해놓으면 범용성 있게 사용 가능하다\n\n#### json\n\n- marshal: 논리적 구조를 바이트로\n- unmarshal: 바이트를 논리적 구조로\n- encode: 언어 내부 구조를 json 형태의 스트림으로\n- decode: json을 언어 내부 구조로\n\n표준 입출력은 encode/decode를 이용하면 마샬보다 빠르다\n(http response, file, stdout)\n\n## 람다 아키텍처\n\n1억건의 데이터가 매일 쌓인다면 이것을 조회할 때 오래 걸린다\n\n이를 해결하기 위해 매일 하루를 요약한 테이블을 만들면 1년의 데이터가 365줄로 요약된다\n근데 실시간 데이터는 반영이 안되므로 이를 위해 실시간 데이터를 계속 업데이트 해준다\n\n기존 테이블에 실시간 테이블이 붙는 방식\n\n하둡이 배치처리를 하는 방식이라 빅데이터에 쓰인다\n\n## JPA\n\nORM이 코드의 객체성과 DB의 관계성을 매꾸기 위해 나왔다고 한다.\n그래서 DB를 item.getName() 이런 식으로 호출할 수 있게 되었다.\n마이크로서비스에서 다른 서비스의 데이터를 item.getName() 처럼 가져오려고 했던게\nORM에서 이미 나온 생각이었다.\n\nAPI gateway가 이를 구현해서 호출하도록 하면 모놀리스 그대로 마이크로서비스화 되지\n않을까?\n\nC#의 Linq는 SQL문처럼 작성하고 선언형으로 작성함으로서 함수형 아키텍처의 이점을\n가져가려고 한다.\n\n## 동적 컨텐츠 vs 정적 컨텐츠\n\n동적\n\n- 채팅\n- 데이터 변경(주식)\n\n블로그 글도 정적이지만 변경 되긴 한다. 근데 새로 빌드하는 것보다 새로 띄우는게\n더 빨라서 주식 정보의 경우에는 동적으로 변경되는게 효율적이다.\n\n#### Go micro를 보면 실행시키기 위해 몇줄이 필요한데\n\n그러지말고 start만 하면 기본 실행 되고\n셋팅은 coc로 설정하면 설정되고 그냥 쓸 수 있게 하는게 좋을 것 같다\n\n개인적으로 쓰는 프로그램은 기본적으로 많은 기능이 있는 것은 안쓰고 싶다. 가볍고 단순하지만 추가적으로 기능을 추가하는 쪽이 좋을 것 같다\n그래서 웨일도 별로다\n웨일은 크롬과 똑같은 엔진을 쓰지만 기본 기능이 주렁주렁 달려있다.\n한번씩 기본 기능들이 좀 많아서 기능의 혜택을 받았으면 좋겠다는 생각이 들었는데, 그냥 가벼운 쪽이 더 컨트롤하기 좋아서 낫겠다 싶다\n\n플러그인의 단점이 일일이 찾아봐야 기능을 쓸 수 있다는 것인데, 이 부분을 개선할 필요가 있다\n\n#### micro\n\ngrpc는 내가 모르는 코드를 너무 많이 생성한다. micro도 마찬가지\n나는 오히려 cookiecutter처럼 내가 알지만 매번 만들기 귀찮은 것을 쉽게 만들어주는\n것을 원한다. create-react-app처럼.\nkubernetes는... 점차 속속들이 알아나가야지...\n\n내 만들어져있는 로직을 조금만 수정해서 마이크로서비스화 하는 것을 해봐야겠다\n입력과 출력을 받는 형태만 갖추면 바로 찾아서 연결해서 쓰도록\n\n#### 스프링 빈\n\n주요 속성\n\n- class (필수)\n- id: bean의 고유 식별자. 이름에 의미 없음!?\n- scope\n- constructor-arg: 생성 시 생성자에 전달할 인수\n- property: 생성 시 bean setter에 전달할 인수\n  - ref\n  - value\n- init method\n- destroy method\n\n<context:annotation-config/> 를 쓰면 빈 설정을 어노테이션을 검색해 반영한다\n\n#### 스프링 시큐리티\n\nsecurity:authentication-manager\n\n- 인자로 받은 Authentication 객체가 유효하다면 Principal을 담고있는 이것을\n  리턴한다.\n  - security:authentication-provider\n    manager가 직접 처리 안하고 provider에 위임한다.\n\n#### 메소드 체이닝\n\n기차 충돌\n빌더 패턴\n디미터의 법칙\n함수형 패러다임\n\n객체 자신 또는 내부의 정보로 이루어진 체이닝은 괜찮다?\n\n객체 간 상태 변경 필요 시 어떻게 하는것이 효과적인가?\n주인공이 적을 공격 했을 때\n역할과 하는 일(책임)을 분리한다\n주인공은 공격하는 일만 하고, 적은 이벤트에 대응하기만 하면 된다?\n공격이 제대로 되었는지는 어디서 판단? 또 다른 객체?\n\n흐름이 없는 코드, 상태가 없는 코드\n\n#### 지금의 메소드 체이닝과 디미터 법칙의 차이\n\n디미터 법칙은 호출한 객체의 함수가 다른 객체를 불러 처음 호출한 객체와 다른\n객체를 부르기 위한 것이 되어버린 메소드 체이닝이 복잡도를 높이는 점을 지적한다\n지금의 메소드 체이닝은 메소드가 기존에 호출했던 객체를 반환함으로써 가독성을\n높이는 효과를 위해 사용되고 있다\n\n#### go 에서 외부공개함수는 대문자로 시작하는데\n\n메인로직 외에는 공개하지 않도록 짜야겠다\n\n근데 인터페이스로 만들면 다 공개해야되는거 아닌가\n\n- 인터페이스로 쓰는건 공개하고, 인터페이스 함수 내에 있는 것은 감추면 되겠다\n\n#### Python HowDoI 라이브러리\n\n라이브러리 사용자가 쓰지 않는 함수는 함수명 앞에 언더바를 붙이고, 테스트 시\n사용자가 쓰는 함수만을 통해 테스트한다고 한다\n\n#### 플러그인 만드는 법\n\n비즈니스 로직이 바라보는 인터페이스가 있고,\n이 인터페이스를 구현하는게 플러그인이라면.\n\n플러그인의 예\n\n- 크롬 확장 프로그램\n  - 크롬의 정보를 불러와서 크롬에 표시하게 해준다.\n- 그놈 확장 프로그램\n  - 그놈 인터페이스의 값을 내 기능을 실행시키고 동작하게 한다.\n- 비주얼 스튜디오 코드의 확장 프로그램\n  - 원하는 기능을 실행하도록 해준다.\n\n플러그인을 설치하면 기존의 흐름을 낚아채서 조절한 후 다시 갖다 놓는 그림이다.\n그렇다면 플러그인을 실행하도록 하는 로직을 구현해놔야겠다\n\n#### 플러그인\n- 플러그인이 어디까지 접근 가능한가?\n\t- 코드에 직접 접근하지 않지만 내부의 동작을 수정한다\n\t- 짜여진 코드 중간중간에 삽입하는게 아니라 외부에서 붙여지는 방식이라 관리가 쉽다\n\t- 사용/비사용 관리가 쉽다\n\t- 오버로딩과 비슷한 느낌으로 구현하는건가?\n\t- 플러그인을 실행하는 함수만 구현하도록 하고, 플러그인이 내부의 함수를 호출할 수 있도록 만들면 되나? 그러면 겹치는 부분은 플러그인 함수가 실행되게 되나?\n\t- vscode 에서는 package.json에서 사용할 목록을 입력하고, extension.ts라는 하나의 파일 안에 activate라는 함수만 실행하게 해서 사용하려는 것을 사용하도록 하게 하고 있다\n\t\t- 여기에 vscode에서 제공하는 함수들을 이용할 수 있게 했다. 플러그인 아키텍처를 구현할 때 이 함수들을 어떻게 만들지가 포인트겠다.\n\t\t\t- vscode의 commands 클래스에는 execute, register, update 등 함수가 제공된다.\n\t\t\t- commands, window, workspace 등 조작할 수 있는 것들을 화이트리스트로 제공한다.\n\t\t\t- 즉 코어에서는 이 commands, window 들을 정의하는 것이 주요 역할이고 이를 익스텐션이 덮어쓰도록 한다.\n\t\t\t- 플러그인 구현하는쪽은 제공해준 함수 안에서만 뭔가를 할 수 있다.\n\t\t- 사용자는 물론 자신의 함수를 정의해서 activate 함수에서 쓸 수 있다.\n\t\t- 플러그인은 결국 인터페이스를 구현하는것이라 틀은 만들어놔야한다.\n\n#### 특정한 값을 보고 분기해줄 때 어떻게하면 좋을까\n\n어떤 알림인지 타입을 보고 결정하게 될텐데\n타입에 맞는 핸들러를 매칭해줄때\n스위치를 쓸까\n배열에 지정해놓고 호출하는식으로 할까\n클래스로 할 수 있을까?\n\n타입을 보고 결정?\n\n#### 개발 노하우\n\n삭제는 딜리트가 아니라 isDelete를 true로 바꾸고\n히스토리를 추가하는 작업\n\n진짜 삭제가 필요한 경우는?\n\n#### 프로그래밍 언어 추상화 단계\n\n- 기계어 0101010\n- 어셈블리어\n- 명령형 코드 for\n- 선언형 코드 filter()\n\n#### iterator 함수 감싸기\n\niterator를 쓰는 함수는 내부가 for문을 돌리고 원하는 처리를 하는 동일한 구조로 되어있다\n이걸 계속 반복해서 쓰기보다 감싼 함수에서 실행하게 하면 좋겠다\n\n#### iterable, iterator 차이?\n\nlist 같이 요소를 순회할 수 있는 것을 iterable이라 한다\niterator도 iterable한 객체인데 iterator는 한 개씩 꺼내 쓰기 위한 것이라 iterable이 iterator는 아니다\n\n#### iterator와 stream 비교\n\n- iterator를 간결하게 쓰게 해주는게 stream\n\nquery로 필터링하는 것과 stream filter 비교\n\n- 많은 양에서는 무조건 쿼리가 빠름\n- 그동안 db 최적화가 아주 많이 이뤄졌기 때문\n  iterator도 iterable하니까 map을 쓸 수 있지 않을까?\n\n\n## software\n\n#### twelve factor app\n\n웹앱처럼 서비스로 사용되는 소프트웨어에서 이 요구사항 12가지를 챙겨서 만들자는 방법론\n\n- https://12factor.net/ko/\n\n1. 버전 컨트롤을 사용하자\n2. 라이브러리 의존성을 명시적으로 선언하고 분리하자\n3. 인증 정보, DB 설정, 각종 배포 설정을 환경 변수로 관리하자\n4. 객체 저장소, DB, 캐시, 메시지 큐, 외부 API 서버 등을 구별 없이 서비스로 인식하자\n5. 애플리케이션 빌드, 출시, 실행 단계를 엄격하게 분리하고 관리하자\n6. 애플리케이션을 독립적인 무상태(stateless) 프로세스로 실행하자 (DB 사용. 로컬 Disk 사용 X)\n7. 독립적인 포트를 바인딩하여 서비스로 공개하고 포트로 들어오는 요청을 처리하자\n8. 이러한 프로세스 모델을 기반으로 수직적, 수평적 확장을 제공하자\n9. 빠른 시작과 그레이스풀 셧다운을 통한 안정성 극대화를 하자\n10. 개발, 테스트 및 정식 서비스 환경을 최대한 동일하게 유지하자\n11. 각종 로그는 파일로 다루지 않고 앱이 실행되는 도중에 실시간으로 포착하자\n12. 관리자 업무와 백 오피스 업무는 기존 애플리케이션 같은 환경에서 동일 형태로 취급하자\n\n그리고 추가로 3가지를 더 고려하면 좋겠다고 이야기했다고 한다\n텔레메트리(모니터링), 자동화, 보안\n\n#### 서버리스\n\n이벤트 소스 -> 함수 -> 서비스\n\n#### 객체 지향은 어떤 요구로 나오게 되었는가\n\n복잡한 구조에서는 객체지향의 상속, 추상이 도움이 되더라\n\n절차지향적이던 코드는 책을 쓰는 것과 비슷했다\n객체지향이 나오면서 책을 쓰는 것과는 달라졌지만\n작가가 퇴고하는 것과 리팩토링하는 부분은 비슷했다\n하지만 작가는 퇴고 후 출판된 책은 더 이상 수정하려 하지 않고 독자에게로 넘겨준다\n이 점은 코딩과의 차이점인데, 코딩도 이처럼 완료되는 시점을 만들 수 있을까.\n리눅스의 sed나 기본 명령어들은 자주 업데이트하지 않으며, 오랫동안 업데이트 되지 않았지만 여전히 쓰이는 코드들이 있다.\n그러나 프로그램 전반의 생태계는 빠르게 변하고 있어서 사용자가 원활하게 쓸 수 있도록 하기 위해서는 끝없는 수정이 불가피하다.\n\n#### 모놀리스도 정반합에서 합이었던 아키텍처\n- [ ] 어떤 것을 보완하기 위해 모놀리스라는 아키텍처가 달성되었을까\n3 layer 아키텍처를 만들다보니 모놀리스가 된 것인가\n\n\n## 컴퓨터\n\n#### 컴퓨터\n\n컴퓨터의 단점\n\n- 눈 앞에 있어야 한다. (컴퓨터 앞에서는 공간의 제약이 없어지지만)\n- 프로그램별 호환성, 종속성을 신경 써야한다. (에버노트의 데이터를 노션에\n  옮기려면 번거롭다)\n- 디스플레이에 따라 정보가 제한적이고, 답답하고, 한 눈에 보기 힘들어진다.\n\n장점\n\n- 변경이 가능하다. (종이는 새로운 종이가 필요한데)\n- 점진적 개발이 가능하다\n- 검색 기능\n\n기계는 그냥 해달라는 대로 해주는 것에 그칠 뿐이지만\n사람은 그 요구사항을 경험적, 직관적으로 판단해서 소비자와 같이 만들 수 있다\n\n이 부분이 사람의 장점일 것 같다\n이 점은 서로 존중하면 시너지가 될 것이고, 이익만 좇는다면 등쳐먹는 것이 되겠다\n\n#### Digital\n\n- 디지털의 역할\n- 불편함은 줄이고 원하는 것은 쉽게 얻을 수 있도록 하는 것?\n","frontmatter":{"title":"Software","summary":"Language, Web","date":"2020, 04 06","updated":"2025, 07 23","tags":"fundamental","parent":null},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4\">소프트웨어</a></p>\n<ul>\n<li>\n<ul>\n<li>\n<p><a href=\"#%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EB%8A%94-%ED%98%84%EB%8C%80%EC%9D%98-%EB%8F%84%EA%B5%AC%EB%8B%A4\">소프트웨어는 현대의 도구다</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EB%8A%94-%EB%B3%80%EA%B2%BD%EC%9D%84-%EC%9C%84%ED%95%B4%EC%84%9C-%EC%9E%88%EB%8B%A4\">소프트웨어는 변경을 위해서 있다</a></p>\n</li>\n<li>\n<p><a href=\"#%EA%B3%84%EC%86%8D-%EA%B4%80%EB%A6%AC%ED%95%B4%EC%A3%BC%EC%A7%80-%EC%95%8A%EC%95%84%EB%8F%84-%EC%9C%A0%EC%A7%80%EB%90%98%EB%8A%94-%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EA%B0%80-%EB%A7%8C%EB%93%A4%EC%96%B4%EC%A7%88-%EC%88%98-%EC%9E%88%EC%9D%84%EA%B9%8C\">계속 관리해주지 않아도 유지되는 소프트웨어가 만들어질 수 있을까</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%BB%A8%EC%85%89%EC%9D%84-%EA%B0%80%EC%A7%84-%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4\">컨셉을 가진 소프트웨어</a></p>\n</li>\n<li>\n<p><a href=\"#algorithm-vs-program\">Algorithm vs Program</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4-%EC%84%9C%EB%B9%84%EC%8A%A4%EC%97%90%EC%84%9C-%EB%AC%B4%EB%A3%8C%EB%A1%9C-%EC%A0%9C%EA%B3%B5%EB%90%98%EC%96%B4%EC%95%BC-%ED%95%98%EB%8A%94-%EB%B6%80%EB%B6%84%EA%B3%BC-%EB%8F%88%EC%9D%84-%EB%B0%9B%EC%95%84%EC%95%BC-%ED%95%98%EB%8A%94-%EB%B6%80%EB%B6%84\">소프트웨어, 서비스에서 무료로 제공되어야 하는 부분과 돈을 받아야 하는 부분</a></p>\n</li>\n<li>\n<p><a href=\"#software-to-make-money\">software to make money</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%A7%A8%ED%88%AC%EB%A7%A8-%EC%84%9C%EB%B9%84%EC%8A%A4\">맨투맨 서비스</a></p>\n<ul>\n<li><a href=\"#%EA%B0%9C%EC%9D%B8-%EB%8C%80%EC%83%81-%EB%A7%A8%ED%88%AC%EB%A7%A8-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8\">개인 대상 맨투맨 프로젝트</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EA%B0%9C%EC%9D%B8-%EB%A7%9E%EC%B6%A4%ED%98%95-%EC%84%9C%EB%B9%84%EC%8A%A4\">개인 맞춤형 서비스</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%B3%80%ED%99%94%EB%A5%BC-%EA%B0%90%EC%A7%80%ED%95%98%EB%8A%94-%EC%8B%9C%EA%B0%84-200ms\">변화를 감지하는 시간 200ms</a></p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#agile\">Agile</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#tldr\">TL;DR</a></li>\n<li><a href=\"#%EC%95%A0%EC%9E%90%EC%9D%BC%EC%9D%98-%EC%99%84%EC%84%B1%EB%8F%84\">애자일의 완성도</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#concurrency\">Concurrency</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#%EB%8F%99%EC%8B%9C%EC%84%B1-%EB%B3%91%EB%A0%AC%EC%84%B1-%EB%B8%94%EB%A1%9D%ED%82%B9\">동시성 병렬성 블록킹</a></li>\n<li><a href=\"#%EB%B9%84%EB%8F%99%EA%B8%B0-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EC%9D%98-%EC%8B%A4%ED%96%89-%EC%B2%98%EB%A6%AC-%EC%82%AC%EB%A1%80\">비동기 프로그램의 실행 처리 사례</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#pointer-vs-reference\">pointer vs reference</a></p>\n</li>\n<li>\n<p><a href=\"#design-pattern\">Design Pattern</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#abstraction-and-automation\">abstraction and automation</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#procedure-declarative\">procedure, declarative</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%B3%80%EC%88%98%EC%97%90-get-set%EC%9D%84-%EC%84%A4%EC%A0%95%ED%95%9C%EB%8B%A4%EA%B3%A0-%EA%B0%9D%EC%B2%B4%EA%B0%80-%EB%90%98%EB%8A%94%EA%B2%8C-%EC%95%84%EB%8B%88%EB%9D%BC\">변수에 get, set을 설정한다고 객체가 되는게 아니라</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#%EA%B0%9D%EC%B2%B4%EB%8A%94-%EB%82%B4%EB%B6%80%EA%B5%AC%EC%A1%B0%EB%A5%BC-%EC%88%A8%EA%B2%A8%EC%95%BC-%ED%95%9C%EB%8B%A4%EA%B3%A0-%ED%95%9C%EB%8B%A4\">객체는 내부구조를 숨겨야 한다고 한다</a></li>\n<li><a href=\"#%EC%82%AC%EC%9A%A9%EC%9E%90%EA%B0%80-%EC%A7%81%EC%A0%91-%ED%98%B8%EC%B6%9C%ED%95%98%EB%8A%94-api%EB%8A%94-%EC%B5%9C%EB%8C%80%ED%95%9C-%EC%B6%94%EC%83%81%EC%A0%81%EC%9C%BC%EB%A1%9C-%ED%95%98%EA%B3%A0\">사용자가 직접 호출하는 api는 최대한 추상적으로 하고</a></li>\n<li><a href=\"#plus\">Plus</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%A7%81%EB%A0%AC%ED%99%94\">직렬화</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#json\">json</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EB%9E%8C%EB%8B%A4-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98\">람다 아키텍처</a></p>\n</li>\n<li>\n<p><a href=\"#jpa\">JPA</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%8F%99%EC%A0%81-%EC%BB%A8%ED%85%90%EC%B8%A0-vs-%EC%A0%95%EC%A0%81-%EC%BB%A8%ED%85%90%EC%B8%A0\">동적 컨텐츠 vs 정적 컨텐츠</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#go-micro%EB%A5%BC-%EB%B3%B4%EB%A9%B4-%EC%8B%A4%ED%96%89%EC%8B%9C%ED%82%A4%EA%B8%B0-%EC%9C%84%ED%95%B4-%EB%AA%87%EC%A4%84%EC%9D%B4-%ED%95%84%EC%9A%94%ED%95%9C%EB%8D%B0\">Go micro를 보면 실행시키기 위해 몇줄이 필요한데</a></li>\n<li><a href=\"#micro\">micro</a></li>\n<li><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EB%B9%88\">스프링 빈</a></li>\n<li><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EC%8B%9C%ED%81%90%EB%A6%AC%ED%8B%B0\">스프링 시큐리티</a></li>\n<li><a href=\"#%EB%A9%94%EC%86%8C%EB%93%9C-%EC%B2%B4%EC%9D%B4%EB%8B%9D\">메소드 체이닝</a></li>\n<li><a href=\"#%EC%A7%80%EA%B8%88%EC%9D%98-%EB%A9%94%EC%86%8C%EB%93%9C-%EC%B2%B4%EC%9D%B4%EB%8B%9D%EA%B3%BC-%EB%94%94%EB%AF%B8%ED%84%B0-%EB%B2%95%EC%B9%99%EC%9D%98-%EC%B0%A8%EC%9D%B4\">지금의 메소드 체이닝과 디미터 법칙의 차이</a></li>\n<li><a href=\"#go-%EC%97%90%EC%84%9C-%EC%99%B8%EB%B6%80%EA%B3%B5%EA%B0%9C%ED%95%A8%EC%88%98%EB%8A%94-%EB%8C%80%EB%AC%B8%EC%9E%90%EB%A1%9C-%EC%8B%9C%EC%9E%91%ED%95%98%EB%8A%94%EB%8D%B0\">go 에서 외부공개함수는 대문자로 시작하는데</a></li>\n<li><a href=\"#python-howdoi-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC\">Python HowDoI 라이브러리</a></li>\n<li><a href=\"#%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8-%EB%A7%8C%EB%93%9C%EB%8A%94-%EB%B2%95\">플러그인 만드는 법</a></li>\n<li><a href=\"#%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8\">플러그인</a></li>\n<li><a href=\"#%ED%8A%B9%EC%A0%95%ED%95%9C-%EA%B0%92%EC%9D%84-%EB%B3%B4%EA%B3%A0-%EB%B6%84%EA%B8%B0%ED%95%B4%EC%A4%84-%EB%95%8C-%EC%96%B4%EB%96%BB%EA%B2%8C%ED%95%98%EB%A9%B4-%EC%A2%8B%EC%9D%84%EA%B9%8C\">특정한 값을 보고 분기해줄 때 어떻게하면 좋을까</a></li>\n<li><a href=\"#%EA%B0%9C%EB%B0%9C-%EB%85%B8%ED%95%98%EC%9A%B0\">개발 노하우</a></li>\n<li><a href=\"#%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%EC%96%B8%EC%96%B4-%EC%B6%94%EC%83%81%ED%99%94-%EB%8B%A8%EA%B3%84\">프로그래밍 언어 추상화 단계</a></li>\n<li><a href=\"#iterator-%ED%95%A8%EC%88%98-%EA%B0%90%EC%8B%B8%EA%B8%B0\">iterator 함수 감싸기</a></li>\n<li><a href=\"#iterable-iterator-%EC%B0%A8%EC%9D%B4\">iterable, iterator 차이?</a></li>\n<li><a href=\"#iterator%EC%99%80-stream-%EB%B9%84%EA%B5%90\">iterator와 stream 비교</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#software\">software</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#twelve-factor-app\">twelve factor app</a></li>\n<li><a href=\"#%EC%84%9C%EB%B2%84%EB%A6%AC%EC%8A%A4\">서버리스</a></li>\n<li><a href=\"#%EA%B0%9D%EC%B2%B4-%EC%A7%80%ED%96%A5%EC%9D%80-%EC%96%B4%EB%96%A4-%EC%9A%94%EA%B5%AC%EB%A1%9C-%EB%82%98%EC%98%A4%EA%B2%8C-%EB%90%98%EC%97%88%EB%8A%94%EA%B0%80\">객체 지향은 어떤 요구로 나오게 되었는가</a></li>\n<li><a href=\"#%EB%AA%A8%EB%86%80%EB%A6%AC%EC%8A%A4%EB%8F%84-%EC%A0%95%EB%B0%98%ED%95%A9%EC%97%90%EC%84%9C-%ED%95%A9%EC%9D%B4%EC%97%88%EB%8D%98-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98\">모놀리스도 정반합에서 합이었던 아키텍처</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%BB%B4%ED%93%A8%ED%84%B0\">컴퓨터</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#%EC%BB%B4%ED%93%A8%ED%84%B0-1\">컴퓨터</a></li>\n<li><a href=\"#digital\">Digital</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>"}},"pageContext":{"slug":"/software/","previous":{"fields":{"slug":"/reading/"},"frontmatter":{"title":"Reading","tags":"idea"},"fileAbsolutePath":"/home/runner/work/shdkej.github.io/shdkej.github.io/content/Idea/Reading.md"},"next":{"fields":{"slug":"/travel/"},"frontmatter":{"title":"Travel","tags":"idea"},"fileAbsolutePath":"/home/runner/work/shdkej.github.io/shdkej.github.io/content/Idea/Travel.md"},"filePath":"Fundamental/Software.md"}},"staticQueryHashes":["3000541721","4165914708","488914979"],"slicesMap":{}}